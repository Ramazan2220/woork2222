#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –∞–¥–º–∏–Ω-–±–æ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
"""

import sys
import os
import time
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from admin_bot.services.user_service import UserService
from admin_bot.models.user import SubscriptionPlan, UserStatus, PLAN_INFO
from utils.subscription_service import subscription_service

def test_admin_bot_comprehensive():
    """–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""
    print("üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –ê–î–ú–ò–ù-–ë–û–¢–ê")
    print("=" * 60)
    
    user_service = UserService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    test_users = [
        {"id": 111111111, "username": "trial_user_1", "plan": SubscriptionPlan.FREE_TRIAL_1_DAY},
        {"id": 222222222, "username": "trial_user_3", "plan": SubscriptionPlan.FREE_TRIAL_3_DAYS},
        {"id": 333333333, "username": "premium_user", "plan": SubscriptionPlan.SUBSCRIPTION_30_DAYS},
        {"id": 444444444, "username": "lifetime_user", "plan": SubscriptionPlan.SUBSCRIPTION_LIFETIME},
    ]
    
    try:
        print("\n1Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("-" * 40)
        
        created_users = []
        for user_data in test_users:
            user = user_service.create_user(user_data["id"], user_data["username"])
            user.set_subscription(user_data["plan"])
            user_service.update_user(user)
            created_users.append(user)
            
            plan_info = PLAN_INFO[user_data["plan"]]
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω: @{user.username}")
            print(f"   ID: {user.telegram_id}")
            print(f"   –ü–ª–∞–Ω: {plan_info['name']} (${plan_info['price']})")
            print(f"   –°—Ç–∞—Ç—É—Å: {user.status.value}")
            print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {user.days_remaining}")
            print()
        
        print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("-" * 40)
        
        stats = user_service.get_statistics()
        print(f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active_users']}")
        print(f"   –ù–∞ —Ç—Ä–∏–∞–ª–µ: {stats['trial_users']}")
        print(f"   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['blocked_users']}")
        print(f"   –ò—Å—Ç–µ–∫—à–∏—Ö: {stats['expired_users']}")
        print(f"   –û–±—â–∏–π –¥–æ—Ö–æ–¥: ${stats['estimated_revenue']}")
        print()
        
        print("üìã –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–ª–∞–Ω–∞–º:")
        for plan, count in stats['plans_distribution'].items():
            plan_enum = SubscriptionPlan(plan)
            plan_info = PLAN_INFO[plan_enum]
            print(f"   {plan_info['name']}: {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        print("\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –î–û–°–¢–£–ü–ê")
        print("-" * 40)
        
        for user in created_users:
            access_info = subscription_service.check_user_access(user.telegram_id)
            print(f"üë§ @{user.username}:")
            print(f"   –î–æ—Å—Ç—É–ø: {'‚úÖ' if access_info['has_access'] else '‚ùå'} {access_info['has_access']}")
            print(f"   –°—Ç–∞—Ç—É—Å: {access_info['status']}")
            print(f"   –¢—Ä–∏–∞–ª: {access_info['is_trial']}")
            if access_info['days_remaining'] != float('inf'):
                print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {access_info['days_remaining']}")
            else:
                print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: ‚ôæÔ∏è –ù–∞–≤—Å–µ–≥–¥–∞")
            print()
        
        print("\n4Ô∏è‚É£ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ü–û–î–ü–ò–°–û–ö")
        print("-" * 40)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∏–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–ª–∞—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
        trial_user = created_users[0]  # trial_user_1
        print(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º @{trial_user.username} —Å —Ç—Ä–∏–∞–ª–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞...")
        
        success = user_service.set_user_subscription(
            trial_user.telegram_id, 
            SubscriptionPlan.SUBSCRIPTION_90_DAYS
        )
        
        if success:
            updated_access = subscription_service.check_user_access(trial_user.telegram_id)
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {updated_access['status']}")
            print(f"   –¢—Ä–∏–∞–ª: {updated_access['is_trial']}")
            print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {updated_access['days_remaining']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏")
        
        print("\n5Ô∏è‚É£ –¢–ï–°–¢ –ë–õ–û–ö–ò–†–û–í–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
        print("-" * 40)
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        block_user = created_users[1]  # trial_user_3
        print(f"üö´ –ë–ª–æ–∫–∏—Ä—É–µ–º @{block_user.username}...")
        
        success = user_service.block_user(block_user.telegram_id)
        if success:
            blocked_access = subscription_service.check_user_access(block_user.telegram_id)
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
            print(f"   –°—Ç–∞—Ç—É—Å: {blocked_access['status']}")
            print(f"   –î–æ—Å—Ç—É–ø: {blocked_access['has_access']}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {blocked_access['message']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
        
        print("\n6Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ü–û –ö–†–ò–¢–ï–†–ò–Ø–ú")
        print("-" * 40)
        
        # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        active_users = user_service.get_users_by_status(UserStatus.ACTIVE)
        print(f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}")
        for user in active_users:
            print(f"   @{user.username} - {PLAN_INFO[user.subscription_plan]['name']}")
        
        # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        blocked_users = user_service.get_users_by_status(UserStatus.BLOCKED)
        print(f"\nüö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(blocked_users)}")
        for user in blocked_users:
            print(f"   @{user.username}")
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–ª–∞–Ω–æ–º
        premium_users = user_service.get_users_by_plan(SubscriptionPlan.SUBSCRIPTION_30_DAYS)
        print(f"\nüí≥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–ª–∞–Ω–æ–º '30 –¥–Ω–µ–π': {len(premium_users)}")
        for user in premium_users:
            print(f"   @{user.username}")
        
        print("\n7Ô∏è‚É£ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –û–°–ù–û–í–ù–û–ô –°–ò–°–¢–ï–ú–û–ô")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        for user in created_users[:2]:  # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ @{user.username} —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É:")
            
            user_stats = subscription_service.get_user_stats(user.telegram_id)
            print(f"   –ü–ª–∞–Ω: {user_stats.get('plan_name')}")
            print(f"   –¶–µ–Ω–∞: ${user_stats.get('plan_price')}")
            print(f"   –î–æ—Å—Ç—É–ø: {'‚úÖ' if user_stats['has_access'] else '‚ùå'}")
            
            # –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            subscription_service.update_user_activity(user.telegram_id)
            print(f"   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ")
            print()
        
        print("\n8Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
        print("-" * 40)
        
        final_stats = user_service.get_statistics()
        print(f"üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {final_stats['total_users']}")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {final_stats['active_users']}")
        print(f"   –ù–∞ —Ç—Ä–∏–∞–ª–µ: {final_stats['trial_users']}")
        print(f"   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {final_stats['blocked_users']}")
        print(f"   –û–±—â–∏–π –¥–æ—Ö–æ–¥: ${final_stats['estimated_revenue']}")
        
        print(f"\nüí∞ –î–æ—Ö–æ–¥—ã –ø–æ –ø–ª–∞–Ω–∞–º:")
        total_revenue = 0
        for plan_key, count in final_stats['plans_distribution'].items():
            plan_enum = SubscriptionPlan(plan_key)
            plan_info = PLAN_INFO[plan_enum]
            plan_revenue = plan_info['price'] * count
            total_revenue += plan_revenue
            if plan_revenue > 0:
                print(f"   {plan_info['name']}: {count} √ó ${plan_info['price']} = ${plan_revenue}")
        
        print(f"\nüíé –û–±—â–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥: ${total_revenue}")
        
        print("\n9Ô∏è‚É£ –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
        print("-" * 40)
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for user in created_users:
            user_service.delete_user(user.telegram_id)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: @{user.username}")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ê–î–ú–ò–ù-–ë–û–¢–ê –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ:")
        print("   ‚Ä¢ 1 –º–µ—Å—è—Ü: $200")
        print("   ‚Ä¢ 3 –º–µ—Å—è—Ü–∞: $400")
        print("   ‚Ä¢ –ù–∞–≤—Å–µ–≥–¥–∞: $500")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        import traceback
        traceback.print_exc()
        
        # –û—á–∏—Å—Ç–∫–∞ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        print("\nüßπ –û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏...")
        for user_data in test_users:
            try:
                user_service.delete_user(user_data["id"])
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {user_data['username']}")
            except:
                pass
        
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ê –ê–î–ú–ò–ù-–ë–û–¢–ê")
    print("=" * 60)
    
    success = test_admin_bot_comprehensive()
    
    if success:
        print("\nüéØ –ê–î–ú–ò–ù-–ë–û–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
        print("üíº –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        print("üí∞ –¢–∞—Ä–∏—Ñ–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        print("üîê –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–±–æ—Ç–∞")
        sys.exit(1) 
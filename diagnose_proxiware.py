#!/usr/bin/env python3
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Proxiware –ø—Ä–æ–∫—Å–∏
"""

import requests
import socket
import time
from urllib.parse import urlparse

def test_basic_connectivity(host, port):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ö–æ—Å—Ç—É"""
    print(f"üîå –¢–ï–°–¢ –ë–ê–ó–û–í–û–ì–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 50)
    
    try:
        print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {host}:{port}...")
        socket.create_connection((host, port), timeout=10)
        print(f"   ‚úÖ –ü–æ—Ä—Ç {port} –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ {host}")
        return True
    except socket.timeout:
        print(f"   ‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {host}:{port}")
        return False
    except socket.error as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_proxy_authentication(proxy_url):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–æ–∫—Å–∏"""
    print(f"\nüîê –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–†–û–ö–°–ò")
    print("=" * 50)
    
    # –ü–∞—Ä—Å–∏–º URL –ø—Ä–æ–∫—Å–∏
    parsed = urlparse(proxy_url.replace('http://', ''))
    credentials = parsed.netloc.split('@')[0]
    endpoint = parsed.netloc.split('@')[1]
    
    print(f"   –≠–Ω–¥–ø–æ–∏–Ω—Ç: {endpoint}")
    print(f"   –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {credentials[:20]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    test_urls = [
        'http://httpbin.org/ip',
        'https://httpbin.org/ip', 
        'http://ip-api.com/json',
        'https://whatismyipaddress.com/api/ip'
    ]
    
    proxies = {
        'http': proxy_url,
        'https': proxy_url
    }
    
    for test_url in test_urls:
        try:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É—é {test_url}...")
            response = requests.get(test_url, proxies=proxies, timeout=15)
            print(f"   ‚úÖ {test_url}: HTTP {response.status_code}")
            
            if response.status_code == 200:
                print(f"   üìç –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.text[:100]}...")
                return True
            
        except requests.exceptions.ProxyError as e:
            if "503" in str(e):
                print(f"   üö´ 503 Service Unavailable - –ø—Ä–æ–∫—Å–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω")
            elif "407" in str(e):
                print(f"   üîê 407 Proxy Authentication Required - –Ω–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            elif "Connection refused" in str(e):
                print(f"   ‚ùå Connection refused - –ø—Ä–æ–∫—Å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏: {e}")
        except Exception as e:
            print(f"   ‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    return False

def check_proxiware_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ Proxiware"""
    print(f"\nüåê –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê PROXIWARE")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç
    try:
        response = requests.get('https://proxiware.com', timeout=10)
        if response.status_code == 200:
            print("   ‚úÖ –°–∞–π—Ç Proxiware –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è  –°–∞–π—Ç Proxiware: HTTP {response.status_code}")
    except:
        print("   ‚ùå –°–∞–π—Ç Proxiware –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∫—Å–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç
    try:
        socket.create_connection(('proxy.proxiware.com', 1337), timeout=10)
        print("   ‚úÖ –ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä proxy.proxiware.com:1337 –æ—Ç–≤–µ—á–∞–µ—Ç")
    except:
        print("   ‚ùå –ü—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä proxy.proxiware.com:1337 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

def generate_troubleshooting_guide():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫"""
    print(f"\nüîß –†–£–ö–û–í–û–î–°–¢–í–û –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ù–ï–ü–û–õ–ê–î–û–ö")
    print("=" * 70)
    
    print("üìã –®–ê–ì 1: –ü–†–û–í–ï–†–¨–¢–ï –ü–ê–ù–ï–õ–¨ PROXIWARE")
    print("   1. –í–æ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Proxiware")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏/–æ–ø–ª–∞—Ç—ã")
    print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–∫—Å–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã —Ç—Ä–∞—Ñ–∏–∫–∞")
    print()
    
    print("üìã –®–ê–ì 2: –ù–ê–°–¢–†–û–ô–ö–ê IP –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("   1. –£–∑–Ω–∞–π—Ç–µ –≤–∞—à —Ç–µ–∫—É—â–∏–π IP:")
    print("      curl ipinfo.io/ip")
    print("   2. –î–æ–±–∞–≤—å—Ç–µ IP –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –≤ –ø–∞–Ω–µ–ª–∏ Proxiware")
    print("   3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
    print()
    
    print("üìã –®–ê–ì 3: –ü–†–û–í–ï–†–ö–ê –£–ß–ï–¢–ù–´–• –î–ê–ù–ù–´–•")
    print("   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–∞–Ω–µ–ª–∏ Proxiware")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç: host:port:username:password")
    print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤")
    print()
    
    print("üìã –®–ê–ì 4: –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò")
    print("   1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—É–ª (pool-2, pool-3)")
    print("   2. –ò–∑–º–µ–Ω–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É (country-us, country-de)")
    print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–π endpoint (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)")
    print()
    
    print("üìû –ö–û–ù–¢–ê–ö–¢–´ –ü–û–î–î–ï–†–ñ–ö–ò PROXIWARE:")
    print("   üìß Email: support@proxiware.com")
    print("   üí¨ Telegram: @proxiware_support")
    print("   üåê –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs.proxiware.com")

def suggest_immediate_solutions():
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"""
    print(f"\nüí° –ù–ï–ú–ï–î–õ–ï–ù–ù–´–ï –†–ï–®–ï–ù–ò–Ø")
    print("=" * 50)
    
    print("üîÑ –ü–û–ü–†–û–ë–£–ô–¢–ï –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –§–û–†–ú–ê–¢–´:")
    print("   1. proxy.proxiware.com:1337:user-default-network-mbl-pool-2-country-uk:L9p2WjtFRipG")
    print("   2. proxy.proxiware.com:1337:user-default-network-mbl-pool-1-country-us:L9p2WjtFRipG")
    print("   3. proxy.proxiware.com:1337:user-default-network-residential-pool-1-country-uk:L9p2WjtFRipG")
    print()
    
    print("‚öôÔ∏è  –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("   ‚Ä¢ –£–≤–µ–ª–∏—á—å—Ç–µ timeout –¥–æ 30 —Å–µ–∫—É–Ω–¥")
    print("   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ HTTP –≤–º–µ—Å—Ç–æ HTTPS")
    print("   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ User-Agent")
    print()
    
    print("üöÄ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –í –ë–†–ê–£–ó–ï–†–ï:")
    print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ whatismyipaddress.com")
    print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ IP")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    proxy_string = "proxy.proxiware.com:1337:user-default-network-mbl-pool-1-country-uk:L9p2WjtFRipG"
    
    print("üîç –†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PROXIWARE")
    print("=" * 80)
    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –ø—Ä–æ–∫—Å–∏: {proxy_string}")
    print()
    
    # –ü–∞—Ä—Å–∏–º –ø—Ä–æ–∫—Å–∏
    parts = proxy_string.split(':')
    host = parts[0]
    port = int(parts[1])
    username = parts[2]
    password = parts[3]
    proxy_url = f"http://{username}:{password}@{host}:{port}"
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    connectivity_ok = test_basic_connectivity(host, port)
    
    # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç—É—Å Proxiware
    check_proxiware_status()
    
    # –¢–µ—Å—Ç 3: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏
    if connectivity_ok:
        auth_ok = test_proxy_authentication(proxy_url)
        
        if not auth_ok:
            print(f"\n‚ùå –û–°–ù–û–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ü—Ä–æ–∫—Å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
            generate_troubleshooting_guide()
            suggest_immediate_solutions()
    else:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –°–µ—Ä–≤–µ—Ä Proxiware –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   üîß –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É Proxiware")

if __name__ == "__main__":
    main() 
#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ residential –ø—Ä–æ–∫—Å–∏ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π IP
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç proxy-seller.io –∏ –¥—Ä—É–≥–∏–µ residential –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
"""

import sys
import json
from database.db_manager import add_proxy, get_session, get_proxies
from database.models import Proxy
from utils.rotating_proxy_manager import get_rotating_proxy_url

def setup_proxy_seller_residential():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ residential –ø—Ä–æ–∫—Å–∏ –¥–ª—è proxy-seller.io"""
    
    print("üåê –ù–ê–°–¢–†–û–ô–ö–ê RESIDENTIAL –ü–†–û–ö–°–ò PROXY-SELLER.IO")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ residential –ø—Ä–æ–∫—Å–∏:")
    
    host = input("Host (–Ω–∞–ø—Ä–∏–º–µ—Ä res.proxy-seller.io): ").strip() or "res.proxy-seller.io"
    port = input("–ü–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä 10000): ").strip() or "10000"
    username = input("Username (–Ω–∞–ø—Ä–∏–º–µ—Ä user-default-network-res): ").strip()
    password = input("Password: ").strip()
    
    if not username or not password:
        print("‚ùå Username –∏ password –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
        return False
    
    print(f"\nüîß –ù–ê–°–¢–†–û–ô–ö–ê:")
    print(f"Host: {host}")
    print(f"Port: {port}")
    print(f"Username: {username}")
    print(f"Type: Residential —Å —Ä–æ—Ç–∞—Ü–∏–µ–π IP")
    
    # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º username –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–µ—Å—Å–∏–π
    if 'session' not in username.lower() and 'user-' not in username.lower():
        rotating_username = f"user-session-{username}"
    else:
        rotating_username = username
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        proxy_id = add_proxy(
            protocol="http",
            host=host,
            port=int(port),
            username=rotating_username,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π username
            password=password
        )
        
        print(f"\n‚úÖ –ü—Ä–æ–∫—Å–∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (ID: {proxy_id})")
        print(f"üîÑ Username –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏: {rotating_username}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏
        print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò...")
        test_proxy_rotation(proxy_id)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏: {e}")
        return False

def test_proxy_rotation(proxy_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–æ—Ç–∞—Ü–∏—é IP –¥–ª—è –ø—Ä–æ–∫—Å–∏"""
    
    session = get_session()
    try:
        proxy = session.query(Proxy).filter_by(id=proxy_id).first()
        if not proxy:
            print(f"‚ùå –ü—Ä–æ–∫—Å–∏ —Å ID {proxy_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ—Ç–∞—Ü–∏–∏ IP –¥–ª—è –ø—Ä–æ–∫—Å–∏ {proxy.host}:{proxy.port}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–∫—Å–∏
        proxy_config = {
            'protocol': proxy.protocol,
            'host': proxy.host,
            'port': proxy.port,
            'username': proxy.username,
            'password': proxy.password
        }
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–æ–≤ —Ä–æ—Ç–∞—Ü–∏–∏
        test_accounts = [1, 2, 3]
        
        print("\nüìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–ù–´–• –¢–ò–ü–û–í –†–û–¢–ê–¶–ò–ò:")
        
        for account_id in test_accounts:
            print(f"\nüî∏ –ê–∫–∫–∞—É–Ω—Ç ID {account_id}:")
            
            # –†–æ—Ç–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
            time_url = get_rotating_proxy_url(proxy_config, account_id, "time")
            print(f"  ‚è∞ –ü–æ –≤—Ä–µ–º–µ–Ω–∏: {mask_password(time_url)}")
            
            # –†–æ—Ç–∞—Ü–∏—è –Ω–∞ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ
            request_url = get_rotating_proxy_url(proxy_config, account_id, "request")
            print(f"  üîÑ –ù–∞ –∑–∞–ø—Ä–æ—Å–µ: {mask_password(request_url)}")
            
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üí° –ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—É—á–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å")
        
    finally:
        session.close()

def mask_password(url):
    """–ú–∞—Å–∫–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å –≤ URL –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞"""
    if ':' in url and '@' in url:
        parts = url.split('@')
        if len(parts) == 2:
            auth_part = parts[0]
            if ':' in auth_part:
                protocol_user = auth_part.rsplit(':', 1)[0]
                return f"{protocol_user}:***@{parts[1]}"
    return url

def list_current_proxies():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–∫—Å–∏ –≤ —Å–∏—Å—Ç–µ–º–µ"""
    
    proxies = get_proxies()
    
    if not proxies:
        print("üì≠ –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
        return
    
    print("\nüìã –¢–ï–ö–£–©–ò–ï –ü–†–û–ö–°–ò –í –°–ò–°–¢–ï–ú–ï:")
    print("=" * 60)
    
    for proxy in proxies:
        status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if proxy.is_active else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
        proxy_type = "üîÑ Rotating" if ('session' in proxy.username.lower() or 'user-' in proxy.username.lower()) else "üìå Static"
        
        print(f"\nID: {proxy.id} | {status} | {proxy_type}")
        print(f"  üìç {proxy.protocol}://{proxy.host}:{proxy.port}")
        print(f"  üë§ User: {proxy.username}")
        print(f"  üîë Pass: {'*' * len(proxy.password) if proxy.password else 'N/A'}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üåê –ù–ê–°–¢–†–û–ô–ö–ê RESIDENTIAL –ü–†–û–ö–°–ò –° –†–û–¢–ê–¶–ò–ï–ô IP")
    print("=" * 60)
    
    while True:
        print("\nüìã –í–´–ë–ï–†–ò–¢–ï –î–ï–ô–°–¢–í–ò–ï:")
        print("1. üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–≤—ã–π proxy-seller.io residential")
        print("2. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–∫—Å–∏")
        print("3. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–æ—Ç–∞—Ü–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–∫—Å–∏")
        print("4. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            setup_proxy_seller_residential()
        elif choice == "2":
            list_current_proxies()
        elif choice == "3":
            proxy_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
            try:
                test_proxy_rotation(int(proxy_id))
            except ValueError:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø—Ä–æ–∫—Å–∏")
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")

if __name__ == "__main__":
    main() 
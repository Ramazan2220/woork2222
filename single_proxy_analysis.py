#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
"""

import sys
import os
from datetime import datetime, timedelta
import math

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import get_instagram_accounts

def analyze_single_proxy_safety():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏"""
    
    print("üîç –ê–ù–ê–õ–ò–ó –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –û–î–ù–û–ì–û –ú–û–ë–ò–õ–¨–ù–û–ì–û –ü–†–û–ö–°–ò")
    print("=" * 70)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    accounts = get_instagram_accounts()
    active_accounts = [acc for acc in accounts if acc.is_active]
    
    print(f"üìä –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(active_accounts)}")
    print()
    
    # Instagram –ª–∏–º–∏—Ç—ã —Å –æ–¥–Ω–æ–≥–æ IP (–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏)
    daily_limits = {
        'likes': 800,           # –õ–∞–π–∫–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
        'follows': 150,         # –ü–æ–¥–ø–∏—Å–∫–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP  
        'unfollows': 150,       # –û—Ç–ø–∏—Å–∫–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
        'comments': 100,        # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
        'posts': 50,            # –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
        'stories': 100,         # –ò—Å—Ç–æ—Ä–∏–∏ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
        'dm_sends': 50,         # –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP
    }
    
    hourly_limits = {k: v // 16 for k, v in daily_limits.items()}  # 16 –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å
    
    print("üìâ –õ–ò–ú–ò–¢–´ INSTAGRAM –° –û–î–ù–û–ì–û IP (–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏):")
    print("-" * 50)
    for action, limit in daily_limits.items():
        print(f"   {action:12}: {limit:3}/–¥–µ–Ω—å ({hourly_limits[action]:2}/—á–∞—Å)")
    print()
    
    # –†–∞—Å—á–µ—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
    accounts_count = len(active_accounts)
    if accounts_count > 0:
        print(f"üìä –õ–ò–ú–ò–¢–´ –ù–ê –ê–ö–ö–ê–£–ù–¢ ({accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤):")
        print("-" * 50)
        
        per_account_daily = {}
        per_account_hourly = {}
        
        for action, total_limit in daily_limits.items():
            per_day = total_limit // accounts_count
            per_hour = hourly_limits[action] // accounts_count
            
            per_account_daily[action] = per_day
            per_account_hourly[action] = per_hour
            
            print(f"   {action:12}: {per_day:2}/–¥–µ–Ω—å ({per_hour:2}/—á–∞—Å) –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        print()
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤
        print("‚ö†Ô∏è  –ê–ù–ê–õ–ò–ó –†–ò–°–ö–û–í:")
        print("-" * 50)
        
        risk_level = 0
        risks = []
        
        # –†–∏—Å–∫ 1: –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        if accounts_count > 20:
            risk_level += 3
            risks.append(f"üî¥ –í–´–°–û–ö–ò–ô –†–ò–°–ö: {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º IP - —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ!")
        elif accounts_count > 10:
            risk_level += 2
            risks.append(f"üü° –°–†–ï–î–ù–ò–ô –†–ò–°–ö: {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º IP")
        elif accounts_count > 5:
            risk_level += 1
            risks.append(f"üü¢ –ù–ò–ó–ö–ò–ô –†–ò–°–ö: {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º IP")
        else:
            risks.append(f"‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û: {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º IP")
        
        # –†–∏—Å–∫ 2: –õ–∏–º–∏—Ç—ã —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–µ
        if per_account_daily['likes'] < 20:
            risk_level += 2
            risks.append(f"üî¥ –õ–∞–π–∫–∏: —Ç–æ–ª—å–∫–æ {per_account_daily['likes']}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç - –æ—á–µ–Ω—å –º–∞–ª–æ!")
        elif per_account_daily['likes'] < 50:
            risk_level += 1
            risks.append(f"üü° –õ–∞–π–∫–∏: {per_account_daily['likes']}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ")
        
        if per_account_daily['follows'] < 5:
            risk_level += 2
            risks.append(f"üî¥ –ü–æ–¥–ø–∏—Å–∫–∏: —Ç–æ–ª—å–∫–æ {per_account_daily['follows']}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç - –∫—Ä–∏—Ç–∏—á–Ω–æ –º–∞–ª–æ!")
        elif per_account_daily['follows'] < 20:
            risk_level += 1
            risks.append(f"üü° –ü–æ–¥–ø–∏—Å–∫–∏: {per_account_daily['follows']}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ")
        
        # –†–∏—Å–∫ 3: –ü—É–±–ª–∏–∫–∞—Ü–∏–∏
        if per_account_daily['posts'] < 1:
            risk_level += 1
            risks.append(f"üü° –ü—É–±–ª–∏–∫–∞—Ü–∏–∏: {per_account_daily['posts']}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        
        for risk in risks:
            print(f"   {risk}")
        print()
        
        # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞
        print("üéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê:")
        print("-" * 50)
        
        if risk_level >= 6:
            risk_rating = "üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô"
            recommendation = "–ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ IP"
        elif risk_level >= 4:
            risk_rating = "üü° –í–´–°–û–ö–ò–ô"
            recommendation = "–†–ò–°–ö–û–í–ê–ù–ù–û - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –≥—Ä—É–ø–ø—ã"
        elif risk_level >= 2:
            risk_rating = "üü† –°–†–ï–î–ù–ò–ô"
            recommendation = "–í–û–ó–ú–û–ñ–ù–û —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é"
        else:
            risk_rating = "üü¢ –ù–ò–ó–ö–ò–ô"
            recommendation = "–ë–ï–ó–û–ü–ê–°–ù–û –ø—Ä–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤"
        
        print(f"   –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk_rating}")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {recommendation}")
        print()
        
        # –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤
        print("üõ°Ô∏è  –°–¢–†–ê–¢–ï–ì–ò–ò –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:")
        print("-" * 50)
        
        print("1. üìÖ –í–†–ï–ú–ï–ù–ù–û–ï –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï:")
        print("   - –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è")
        print("   - –ü–∞—É–∑—ã 2-5 –º–∏–Ω—É—Ç –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏")
        print("   - –ò–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è")
        print()
        
        print("2. üîÑ –†–û–¢–ê–¶–ò–Ø –ê–ö–¢–ò–í–ù–û–°–¢–ò:")
        print("   - –ù–µ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
        print("   - 30-50% –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å –º–∞–∫—Å–∏–º—É–º")
        print("   - –†–∞–∑–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print()
        
        print("3. üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì –õ–ò–ú–ò–¢–û–í:")
        print("   - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–π—Å—Ç–≤–∏–π")
        print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏")
        print("   - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π")
        print()
        
        print("4. üé≠ –†–ê–ó–ù–û–û–ë–†–ê–ó–ò–ï –î–ï–ô–°–¢–í–ò–ô:")
        print("   - –ù–µ —Ç–æ–ª—å–∫–æ –ª–∞–π–∫–∏ –∏ –ø–æ–¥–ø–∏—Å–∫–∏")
        print("   - –ü—Ä–æ—Å–º–æ—Ç—Ä—ã, Stories, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")
        print("   - –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        print()
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        print("üí° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò:")
        print("-" * 50)
        
        # –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞
        groups = math.ceil(accounts_count / 5)  # –ì—Ä—É–ø–ø—ã –ø–æ 5 –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        group_cost = groups * 70  # $70 –∑–∞ –º–æ–±–∏–ª—å–Ω—ã–π IP
        
        print(f"1. üì± –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ê–ö–ö–ê–£–ù–¢–û–í:")
        print(f"   - –†–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ {groups} –≥—Ä—É–ø–ø –ø–æ 5 –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        print(f"   - {groups} –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏")
        print(f"   - –°—Ç–æ–∏–º–æ—Å—Ç—å: ~${group_cost}/–º–µ—Å—è—Ü")
        print(f"   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –í–´–°–û–ö–ê–Ø")
        print()
        
        # –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –°–º–µ—à–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
        vip_accounts = math.ceil(accounts_count * 0.2)  # 20% VIP
        regular_accounts = accounts_count - vip_accounts
        regular_groups = math.ceil(regular_accounts / 8)  # –ì—Ä—É–ø–ø—ã –ø–æ 8
        
        mixed_cost = (vip_accounts * 70) + (regular_groups * 15)  # –ú–æ–±–∏–ª—å–Ω—ã–µ + Residential
        
        print(f"2. üîÑ –°–ú–ï–®–ê–ù–ù–´–ô –ü–û–î–•–û–î:")
        print(f"   - {vip_accounts} VIP –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ‚Üí {vip_accounts} –º–æ–±–∏–ª—å–Ω—ã—Ö IP")
        print(f"   - {regular_accounts} –æ–±—ã—á–Ω—ã—Ö ‚Üí {regular_groups} residential IP")
        print(f"   - –°—Ç–æ–∏–º–æ—Å—Ç—å: ~${mixed_cost}/–º–µ—Å—è—Ü")
        print(f"   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –û–ü–¢–ò–ú–ê–õ–¨–ù–ê–Ø")
        print()
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–¥–Ω–∏–º IP
        single_cost = 70  # –û–¥–∏–Ω –º–æ–±–∏–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏
        print(f"3. üì± –û–î–ò–ù –ú–û–ë–ò–õ–¨–ù–´–ô –ü–†–û–ö–°–ò:")
        print(f"   - –í—Å–µ {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º IP")
        print(f"   - –°—Ç–æ–∏–º–æ—Å—Ç—å: ~${single_cost}/–º–µ—Å—è—Ü")
        print(f"   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: {risk_rating}")
        print()
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —ç–∫–æ–Ω–æ–º–∏–∏
        savings_group = group_cost - single_cost
        savings_mixed = mixed_cost - single_cost
        
        print("üí∞ –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:")
        print("-" * 50)
        print(f"–≠–∫–æ–Ω–æ–º–∏—è —Å –æ–¥–Ω–∏–º IP:")
        print(f"   vs –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞: ${savings_group}/–º–µ—Å—è—Ü")
        print(f"   vs –°–º–µ—à–∞–Ω–Ω—ã–π: ${savings_mixed}/–º–µ—Å—è—Ü")
        print()
        print("‚öñÔ∏è  –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/—ç–∫–æ–Ω–æ–º–∏—è:")
        if savings_group > 200:
            print("   üí° –≠–∫–æ–Ω–æ–º–∏—è —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è - –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–¥–∏–Ω IP —Å –º–µ—Ä–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        else:
            print("   ‚ö†Ô∏è  –≠–∫–æ–Ω–æ–º–∏—è –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è - –ª—É—á—à–µ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã")

def create_single_proxy_monitoring():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏"""
    
    print("\n" + "="*70)
    print("üìä –°–ò–°–¢–ï–ú–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –î–õ–Ø –û–î–ù–û–ì–û –ü–†–û–ö–°–ò")
    print("="*70)
    
    monitoring_code = '''
# –ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è –æ–¥–Ω–æ–≥–æ IP

class SingleProxyManager:
    def __init__(self):
        self.daily_counters = {
            'likes': 0,
            'follows': 0, 
            'unfollows': 0,
            'comments': 0,
            'posts': 0,
            'stories': 0,
            'dm_sends': 0
        }
        
        self.daily_limits = {
            'likes': 800,
            'follows': 150,
            'unfollows': 150,
            'comments': 100,
            'posts': 50,
            'stories': 100,
            'dm_sends': 50
        }
        
        self.last_reset = datetime.now().date()
    
    def can_perform_action(self, action_type, count=1):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"""
        self._reset_if_new_day()
        
        current = self.daily_counters.get(action_type, 0)
        limit = self.daily_limits.get(action_type, 0)
        
        return (current + count) <= limit
    
    def record_action(self, action_type, count=1):
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"""
        self._reset_if_new_day()
        
        if action_type in self.daily_counters:
            self.daily_counters[action_type] += count
            
        return self.daily_counters[action_type]
    
    def _reset_if_new_day(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ –≤ –Ω–æ–≤–æ–º –¥–Ω–µ"""
        today = datetime.now().date()
        if today > self.last_reset:
            self.daily_counters = {k: 0 for k in self.daily_counters}
            self.last_reset = today
    
    def get_remaining_limits(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ª–∏–º–∏—Ç—ã"""
        self._reset_if_new_day()
        
        remaining = {}
        for action, used in self.daily_counters.items():
            limit = self.daily_limits[action]
            remaining[action] = max(0, limit - used)
            
        return remaining
'''
    
    print("üíª –ö–û–î –°–ò–°–¢–ï–ú–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:")
    print(monitoring_code)
    
    print("\nüìã –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
    print("-" * 30)
    print("proxy_manager = SingleProxyManager()")
    print("if proxy_manager.can_perform_action('likes', 10):")
    print("    # –í—ã–ø–æ–ª–Ω–∏—Ç—å –ª–∞–π–∫–∏")
    print("    proxy_manager.record_action('likes', 10)")
    print("else:")
    print("    # –û—Ç–ª–æ–∂–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")

if __name__ == "__main__":
    analyze_single_proxy_safety()
    create_single_proxy_monitoring() 
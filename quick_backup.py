#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ë—ã—Å—Ç—Ä—ã–π –±—ç–∫–∞–ø Instagram Bot –ø—Ä–æ–µ–∫—Ç–∞
–°–æ–∑–¥–∞–µ—Ç –æ–¥–∏–Ω ZIP –∞—Ä—Ö–∏–≤ —Å–æ –≤—Å–µ–º –ø—Ä–æ–µ–∫—Ç–æ–º
"""

import os
import zipfile
from datetime import datetime
from pathlib import Path
import sys

def quick_backup():
    """–°–æ–∑–¥–∞–µ—Ç –±—ã—Å—Ç—Ä—ã–π –±—ç–∫–∞–ø –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    project_dir = Path.cwd()
    
    # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    backup_dir = project_dir.parent / 'instagram_bot_backups'
    backup_dir.mkdir(exist_ok=True)
    
    # –ò–º—è –∞—Ä—Ö–∏–≤–∞
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_file = backup_dir / f'instagram_bot_full_backup_{timestamp}.zip'
    
    print(f"üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞...")
    print(f"üìÅ –ü—Ä–æ–µ–∫—Ç: {project_dir}")
    print(f"üì¶ –ë—ç–∫–∞–ø: {backup_file}\n")
    
    # –ò—Å–∫–ª—é—á–∞–µ–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    exclude_dirs = {
        '.git', '__pycache__', 'venv', 'web_env', 'web_env_new',
        '.pytest_cache', 'node_modules', '.next', 'out'
    }
    
    file_count = 0
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    with zipfile.ZipFile(backup_file, 'w', zipfile.ZIP_DEFLATED) as zf:
        for root, dirs, files in os.walk(project_dir):
            # –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            dirs[:] = [d for d in dirs if d not in exclude_dirs]
            
            for file in files:
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                if file.endswith(('.pyc', '.pyo', '.log', '.DS_Store')):
                    continue
                
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, project_dir)
                
                try:
                    zf.write(file_path, arcname)
                    file_count += 1
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                    if file_count % 50 == 0:
                        print(f"  üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {file_count}")
                        
                except Exception as e:
                    print(f"  ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {file}: {e}")
    
    # –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞
    size_mb = backup_file.stat().st_size / 1024 / 1024
    
    print(f"\n‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  - –§–∞–π–ª–æ–≤: {file_count}")
    print(f"  - –†–∞–∑–º–µ—Ä: {size_mb:.2f} MB")
    print(f"  - –ü—É—Ç—å: {backup_file}")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    info_file = backup_dir / f'backup_info_{timestamp}.txt'
    with open(info_file, 'w', encoding='utf-8') as f:
        f.write(f"Instagram Bot Backup\n")
        f.write(f"{'='*30}\n")
        f.write(f"–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        f.write(f"–ü—Ä–æ–µ–∫—Ç: {project_dir}\n")
        f.write(f"–§–∞–π–ª–æ–≤: {file_count}\n")
        f.write(f"–†–∞–∑–º–µ—Ä: {size_mb:.2f} MB\n")
        f.write(f"–ê—Ä—Ö–∏–≤: {backup_file.name}\n")

if __name__ == "__main__":
    try:
        quick_backup()
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
"""

import logging
import threading
import time
import json
import random
from datetime import datetime, timedelta

logger = logging.getLogger(__name__)

# –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏
warmup_queue_running = False
warmup_thread = None

def start_warmup_queue():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞"""
    global warmup_queue_running, warmup_thread
    
    if warmup_queue_running:
        logger.info("üîÑ –û—á–µ—Ä–µ–¥—å –ø—Ä–æ–≥—Ä–µ–≤–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞")
        return
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞...")
    warmup_queue_running = True
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    warmup_thread = threading.Thread(target=process_warmup_queue, daemon=True)
    warmup_thread.start()

def stop_warmup_queue():
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞"""
    global warmup_queue_running
    logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞...")
    warmup_queue_running = False

def process_warmup_queue():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞"""
    from database.db_manager import get_session
    from database.models import WarmupTask, WarmupStatus
    
    while warmup_queue_running:
        try:
            session = get_session()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            # –ë–µ—Ä–µ–º –ª–∏–±–æ –Ω–æ–≤—É—é (PENDING) –ª–∏–±–æ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è—é—â—É—é—Å—è (RUNNING)
            task = session.query(WarmupTask).filter(
                WarmupTask.status.in_([WarmupStatus.PENDING, WarmupStatus.RUNNING])
            ).order_by(
                # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ, –ø–æ—Ç–æ–º –¥–∞–≤–Ω–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–≤—à–∏–µ—Å—è
                WarmupTask.status.desc(),  # RUNNING < PENDING
                WarmupTask.updated_at.asc()  # –°—Ç–∞—Ä—ã–µ –ø–µ—Ä–≤—ã–µ
            ).first()
            
            if task:
                logger.info(f"üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞ #{task.id} –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {task.account_id}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è"
                task.status = WarmupStatus.RUNNING
                task.started_at = datetime.now()
                session.commit()
                
                try:
                    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ–≤
                    process_warmup_task(task, session)
                    
                    # –ó–∞–¥–∞—á–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ RUNNING –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ–≤–∞
                    # –û–Ω–∞ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–≥–¥–∞ –ø—Ä–æ–π–¥—É—Ç –≤—Å–µ —Ñ–∞–∑—ã
                    if task.status != WarmupStatus.COMPLETED:
                        logger.info(f"üîÑ –ó–∞–¥–∞—á–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞ #{task.id} –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")
                    
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞ #{task.id}: {e}")
                    task.status = WarmupStatus.FAILED
                    task.error = str(e)
                    task.completed_at = datetime.now()
                    session.commit()
            
            session.close()
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
            time.sleep(10)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞: {e}")
            time.sleep(30)  # –ë–æ–ª—å—à–µ –ø–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    
    logger.info("üõë –û—á–µ—Ä–µ–¥—å –ø—Ä–æ–≥—Ä–µ–≤–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

def process_warmup_task(task, session):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–¥–∞—á—É –ø—Ä–æ–≥—Ä–µ–≤–∞"""
    from instagram.client import InstagramClient
    from utils.warmup_manager import WarmupManager
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = json.loads(task.settings)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Instagram
    client = InstagramClient(task.account_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥
    if not client.check_login():
        raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç {task.account_id}")
    
    logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–µ–≤–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    full_settings = settings.get('full_settings', {})
    warmup_speed = full_settings.get('warmup_speed', 'NORMAL')
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≥—Ä–µ–≤–∞
    warmup_manager = WarmupManager(task.account_id, client, warmup_speed)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ñ–∞–∑—É
    start_date = task.created_at or datetime.now()
    current_phase = warmup_manager.get_current_phase(start_date)
    
    if current_phase == 'completed':
        logger.info(f"‚ú® –ü—Ä–æ–≥—Ä–µ–≤ –∞–∫–∫–∞—É–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        task.status = WarmupStatus.COMPLETED
        task.completed_at = datetime.now()
        session.commit()
        return
    
    logger.info(f"üìç –¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞: {current_phase}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ –±–∞–∑—ã –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    progress = task.progress or {
        'current_phase': current_phase,
        'phase_start_date': datetime.now().isoformat(),
        'total_actions': {},
        'daily_actions': {},
        'sessions_count': 0
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—Ä–∞ –ª–∏ –¥–µ–ª–∞—Ç—å –ø–∞—É–∑—É
    current_hour = datetime.now().hour
    if current_hour < 9 or current_hour > 23:
        logger.info(f"üò¥ –ù–æ—á–Ω–æ–µ –≤—Ä–µ–º—è ({current_hour}:00), –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ–≤")
        return
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–æ–≥—Ä–µ–≤–∞
    logger.info(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–æ–≥—Ä–µ–≤–∞ #{progress.get('sessions_count', 0) + 1}")
    
    session_results = warmup_manager.perform_human_warmup_session(settings)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    progress['sessions_count'] = progress.get('sessions_count', 0) + 1
    progress['current_phase'] = current_phase
    progress['last_session'] = datetime.now().isoformat()
    progress['last_session_results'] = session_results
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    for action, count in session_results['actions_performed'].items():
        if action not in progress['total_actions']:
            progress['total_actions'][action] = 0
        progress['total_actions'][action] += count
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–Ω–µ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        today = datetime.now().strftime('%Y-%m-%d')
        if 'daily_actions' not in progress:
            progress['daily_actions'] = {}
        if today not in progress['daily_actions']:
            progress['daily_actions'][today] = {}
        if action not in progress['daily_actions'][today]:
            progress['daily_actions'][today][action] = 0
        progress['daily_actions'][today][action] += count
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    task.progress = progress
    session.commit()
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ—Å—Å–∏–∏
    logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ—Å—Å–∏–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞:")
    logger.info(f"   - –í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–π: {session_results['actions_performed']}")
    logger.info(f"   - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏: {session_results['session_duration']} —Å–µ–∫")
    if session_results['errors']:
        logger.warning(f"   - –û—à–∏–±–∫–∏: {session_results['errors']}")
    
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å–µ—Å—Å–∏—é
    # –ó–∞–¥–∞—á–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ RUNNING –∏ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    logger.info(f"‚è∞ –°–ª–µ–¥—É—é—â–∞—è —Å–µ—Å—Å–∏—è –ø—Ä–æ–≥—Ä–µ–≤–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–∑–∂–µ") 
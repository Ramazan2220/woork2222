#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä–æ–ª–µ–π –≤ –ë–î
–ó–ê–ü–£–°–ö–ê–¢–¨ –¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó!
"""

import sys
import logging
from database.db_manager import get_session
from database.models import InstagramAccount
from utils.encryption import encryption

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def encrypt_existing_passwords():
    """–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–æ–ª–∏ –≤ –ë–î"""
    session = get_session()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã
        accounts = session.query(InstagramAccount).all()
        
        encrypted_count = 0
        skipped_count = 0
        
        for account in accounts:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–∞—Ä–æ–ª—å
            if account.password and not account.password.startswith('gAAAAA'):
                try:
                    # –®–∏—Ñ—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
                    encrypted_password = encryption.encrypt_password(account.password)
                    account.password = encrypted_password
                    encrypted_count += 1
                    logger.info(f"‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è {account.username}")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {account.username}: {e}")
            else:
                skipped_count += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        
        logger.info(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        logger.info(f"‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {encrypted_count}")
        logger.info(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}")
        logger.info(f"üìÅ –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        session.rollback()
        sys.exit(1)
    finally:
        session.close()

if __name__ == "__main__":
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞—à–∏—Ñ—Ä—É–µ—Ç –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –≤ –ë–î!")
    print("‚ö†Ô∏è  –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î!")
    response = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
    
    if response.lower() == 'yes':
        encrypt_existing_passwords()
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞") 
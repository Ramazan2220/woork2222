#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Instagram Telegram Bot
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.subscription_service import subscription_service
from admin_bot.services.user_service import UserService
from admin_bot.models.user import SubscriptionPlan, UserStatus

def test_access_control():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ö–û–ù–¢–†–û–õ–Ø –î–û–°–¢–£–ü–ê\n")
    
    user_service = UserService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    test_users = [
        {'id': 111111111, 'username': 'testuser1', 'plan': None},  # –ë–µ–∑ –¥–æ—Å—Ç—É–ø–∞
        {'id': 222222222, 'username': 'testuser2', 'plan': SubscriptionPlan.FREE_TRIAL_1_DAY},  # –¢—Ä–∏–∞–ª
        {'id': 333333333, 'username': 'testuser3', 'plan': SubscriptionPlan.SUBSCRIPTION_30_DAYS},  # –ü–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
    ]
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    for user_data in test_users:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = user_service.get_user(user_data['id'])
        if existing_user:
            print(f"   ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['id']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            if user_data['plan']:
                existing_user.set_subscription(user_data['plan'])
                user_service.update_user(existing_user)
                print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–ª–∞–Ω –¥–ª—è {user_data['username']}")
        else:
            user = user_service.create_user(user_data['id'], user_data['username'])
            if user_data['plan']:
                user.set_subscription(user_data['plan'])
                user_service.update_user(user)
            print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} (ID: {user_data['id']})")
    
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    
    for user_data in test_users:
        user_id = user_data['id']
        username = user_data['username']
        
        print(f"\nüë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username} (ID: {user_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ subscription_service
        access_info = subscription_service.check_user_access(user_id)
        
        print(f"   üìä –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_info['has_access'] else '‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}")
        print(f"   üìã –ü–ª–∞–Ω: {access_info.get('plan', '–ù–µ—Ç –ø–ª–∞–Ω–∞')}")
        print(f"   ‚è∞ –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {access_info.get('days_remaining', 'N/A')}")
        print(f"   üÜì –¢—Ä–∏–∞–ª: {'–î–∞' if access_info.get('is_trial', False) else '–ù–µ—Ç'}")
        print(f"   üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {access_info.get('message', 'N/A')}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        subscription_service.ensure_user_exists(user_id, username)
        print(f"   üîÑ –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä–µ–Ω/—Å–æ–∑–¥–∞–Ω")
    
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    new_user_id = 999999999
    new_username = "newuser"
    
    # –£–¥–∞–ª—è–µ–º –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    existing = user_service.get_user(new_user_id)
    if existing:
        user_service.delete_user(new_user_id)
        print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ
    result = subscription_service.ensure_user_exists(new_user_id, new_username)
    if result:
        print(f"   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{new_username} (ID: {new_user_id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
        access_info = subscription_service.check_user_access(new_user_id)
        print(f"   üìä –î–æ—Å—Ç—É–ø –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω' if access_info['has_access'] else '‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (–æ–∂–∏–¥–∞–µ—Ç—Å—è)'}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    print("\n4Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    stats = user_service.get_statistics()
    print(f"   üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
    print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active_users']}")
    print(f"   üÜì –ù–∞ —Ç—Ä–∏–∞–ª–µ: {stats['trial_users']}")
    print(f"   ‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['blocked_users']}")
    print(f"   ‚è∞ –ò—Å—Ç–µ–∫—à–∏—Ö: {stats['expired_users']}")
    print(f"   üí∞ –û—Ü–µ–Ω–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: ${stats['estimated_revenue']:.2f}")
    
    print("\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
    print("1. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º /start —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞")
    print("2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Å–≤–æ–π ID –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
    print("3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–±–æ—Ç –≤—ã–¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø")
    print("4. –ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    
    return True

if __name__ == "__main__":
    try:
        test_access_control()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc() 
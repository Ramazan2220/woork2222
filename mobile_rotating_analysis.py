#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ –¥–ª—è Instagram –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —Ç–∏–ø–∞–º–∏ –ø—Ä–æ–∫—Å–∏
"""

import sys
import os
from datetime import datetime, timedelta
import math

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import get_instagram_accounts

def analyze_mobile_rotating_proxies():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏"""
    
    print("üì±üîÑ –ê–ù–ê–õ–ò–ó –ú–û–ë–ò–õ–¨–ù–´–• –†–û–¢–ê–¶–ò–û–ù–ù–´–• –ü–†–û–ö–°–ò")
    print("=" * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    accounts = get_instagram_accounts()
    active_accounts = [acc for acc in accounts if acc.is_active]
    accounts_count = len(active_accounts)
    
    print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {accounts_count}")
    print()
    
    # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ç–∏–ø–æ–≤ –ø—Ä–æ–∫—Å–∏
    proxy_types = {
        '–°—Ç–∞—Ç–∏—á–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π': {
            'security': 10,      # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (1-10)
            'cost_per_ip': 70,   # –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ IP –≤ –º–µ—Å—è—Ü
            'rotation': 1,       # –†–æ—Ç–∞—Ü–∏—è (1-10, –≥–¥–µ 10 = –ª—É—á—à–∞—è —Ä–æ—Ç–∞—Ü–∏—è)
            'instagram_trust': 10, # –î–æ–≤–µ—Ä–∏–µ Instagram
            'setup_complexity': 3, # –°–ª–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (1-10)
            'scalability': 3,    # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å (1-10)
            'limits_per_ip': {
                'likes': 800,
                'follows': 150,
                'posts': 50
            },
            'description': '–û–¥–∏–Ω —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π IP'
        },
        
        '–ú–æ–±–∏–ª—å–Ω—ã–π —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π': {
            'security': 9,
            'cost_per_ip': 25,   # –û–±—ã—á–Ω–æ $20-30 –∑–∞ GB —Ç—Ä–∞—Ñ–∏–∫–∞
            'rotation': 9,
            'instagram_trust': 9,
            'setup_complexity': 6,
            'scalability': 8,
            'limits_per_ip': {
                'likes': 600,    # –ù–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ –∏–∑-–∑–∞ —Ä–æ—Ç–∞—Ü–∏–∏
                'follows': 120,
                'posts': 40
            },
            'description': '–†–æ—Ç–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö IP –∫–∞–∂–¥—ã–µ 10-30 –º–∏–Ω—É—Ç'
        },
        
        'Residential —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π': {
            'security': 7,
            'cost_per_ip': 8,    # $5-15 –∑–∞ GB
            'rotation': 10,
            'instagram_trust': 6,
            'setup_complexity': 4,
            'scalability': 10,
            'limits_per_ip': {
                'likes': 400,
                'follows': 80,
                'posts': 30
            },
            'description': '–†–æ—Ç–∞—Ü–∏—è –¥–æ–º–∞—à–Ω–∏—Ö IP –∫–∞–∂–¥—ã–µ 5-15 –º–∏–Ω—É—Ç'
        },
        
        'Datacenter': {
            'security': 2,
            'cost_per_ip': 3,
            'rotation': 8,
            'instagram_trust': 1,
            'setup_complexity': 2,
            'scalability': 10,
            'limits_per_ip': {
                'likes': 100,
                'follows': 20,
                'posts': 10
            },
            'description': '–°–µ—Ä–≤–µ—Ä–Ω—ã–µ IP - –í–´–°–û–ö–ò–ô –†–ò–°–ö –¥–ª—è Instagram'
        }
    }
    
    print("üìä –°–†–ê–í–ù–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ê–ë–õ–ò–¶–ê –¢–ò–ü–û–í –ü–†–û–ö–°–ò:")
    print("=" * 80)
    print(f"{'–¢–∏–ø –ø—Ä–æ–∫—Å–∏':<25} {'–ë–µ–∑–æ–ø.':<7} {'–¶–µ–Ω–∞':<8} {'–†–æ—Ç–∞—Ü–∏—è':<8} {'Instagram':<10} {'–°–ª–æ–∂–Ω–æ—Å—Ç—å':<10}")
    print("-" * 80)
    
    for proxy_type, data in proxy_types.items():
        print(f"{proxy_type:<25} {data['security']:<7} ${data['cost_per_ip']:<7} {data['rotation']:<8} {data['instagram_trust']:<10} {data['setup_complexity']:<10}")
    
    print("\n" + "="*80)
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö
    mobile_rotating = proxy_types['–ú–æ–±–∏–ª—å–Ω—ã–π —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π']
    
    print("üì±üîÑ –ú–û–ë–ò–õ–¨–ù–´–ï –†–û–¢–ê–¶–ò–û–ù–ù–´–ï - –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó")
    print("=" * 80)
    
    print("‚úÖ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:")
    print("-" * 40)
    print("üõ°Ô∏è  –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:")
    print("   ‚Ä¢ 9/10 - –ø–æ—á—Ç–∏ –∫–∞–∫ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –º–æ–±–∏–ª—å–Ω—ã–µ")
    print("   ‚Ä¢ Instagram –¥–æ–≤–µ—Ä—è–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–º—É —Ç—Ä–∞—Ñ–∏–∫—É")
    print("   ‚Ä¢ –û–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å–≤—è–∑–∏ (Verizon, AT&T, T-Mobile)")
    print("   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ SIM-–∫–∞—Ä—Ç—ã")
    print()
    
    print("üîÑ –†–û–¢–ê–¶–ò–Ø:")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ IP –∫–∞–∂–¥—ã–µ 10-30 –º–∏–Ω—É—Ç")
    print("   ‚Ä¢ –°–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤")
    print("   ‚Ä¢ –†–∞–∑–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏ —Ä–µ–≥–∏–æ–Ω—ã")
    print("   ‚Ä¢ –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print()
    
    print("üí∞ –°–¢–û–ò–ú–û–°–¢–¨:")
    print(f"   ‚Ä¢ ~${mobile_rotating['cost_per_ip']}/–º–µ—Å—è—Ü –∑–∞ GB —Ç—Ä–∞—Ñ–∏–∫–∞")
    print("   ‚Ä¢ –í 2-3 —Ä–∞–∑–∞ –¥–µ—à–µ–≤–ª–µ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö")
    print("   ‚Ä¢ –í 2-3 —Ä–∞–∑–∞ –¥–æ—Ä–æ–∂–µ residential")
    print("   ‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ")
    print()
    
    print("üìà –ú–ê–°–®–¢–ê–ë–ò–†–£–ï–ú–û–°–¢–¨:")
    print("   ‚Ä¢ –õ–µ–≥–∫–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ IP")
    print("   ‚Ä¢ Pay-per-use –º–æ–¥–µ–ª—å")
    print("   ‚Ä¢ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–æ—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞")
    print()
    
    print("‚ùå –ù–ï–î–û–°–¢–ê–¢–ö–ò:")
    print("-" * 40)
    print("‚ö†Ô∏è  –°–õ–û–ñ–ù–û–°–¢–¨ –ù–ê–°–¢–†–û–ô–ö–ò:")
    print("   ‚Ä¢ –ù—É–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å sticky sessions")
    print("   ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–æ—Ç–∞—Ü–∏–∏")
    print("   ‚Ä¢ –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω –ø—Ä–∏ —Å–º–µ–Ω–µ IP")
    print()
    
    print("üîÑ –ù–ï–ü–†–ï–î–°–ö–ê–ó–£–ï–ú–û–°–¢–¨:")
    print("   ‚Ä¢ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —Ä–æ—Ç–∞—Ü–∏–∏")
    print("   ‚Ä¢ –ú–æ–∂–µ—Ç —Å–º–µ–Ω–∏—Ç—å IP –≤ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–æ–º–µ–Ω—Ç")
    print("   ‚Ä¢ –†–∞–∑–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã = —Ä–∞–∑–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ IP")
    print()
    
    print("üìä –õ–ò–ú–ò–¢–´:")
    print("   ‚Ä¢ –ù–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ —á–µ–º —É —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö")
    print("   ‚Ä¢ Instagram –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π")
    print()
    
    # –†–∞—Å—á–µ—Ç –¥–ª—è –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    print("üéØ –†–ê–°–ß–ï–¢ –î–õ–Ø –í–ê–®–ò–• –ê–ö–ö–ê–£–ù–¢–û–í:")
    print("=" * 80)
    
    # –õ–∏–º–∏—Ç—ã –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–∞ –≤–µ—Å—å –ø—É–ª IP
    total_daily_limits = mobile_rotating['limits_per_ip']
    
    per_account_limits = {}
    for action, total_limit in total_daily_limits.items():
        per_account = total_limit // accounts_count if accounts_count > 0 else 0
        per_account_limits[action] = per_account
    
    print(f"üìä –õ–ò–ú–ò–¢–´ –ù–ê –ê–ö–ö–ê–£–ù–¢ ({accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤):")
    print("-" * 50)
    for action, limit in per_account_limits.items():
        print(f"   {action:12}: {limit:3}/–¥–µ–Ω—å –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
    print()
    
    # –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞
    risk_score = 0
    risk_factors = []
    
    if accounts_count > 15:
        risk_score += 2
        risk_factors.append(f"üü° {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ - –º–Ω–æ–≥–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø—É–ª–∞ IP")
    elif accounts_count > 10:
        risk_score += 1
        risk_factors.append(f"üü¢ {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ - –ø—Ä–∏–µ–º–ª–µ–º–æ")
    else:
        risk_factors.append(f"‚úÖ {accounts_count} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ - –æ—Ç–ª–∏—á–Ω–æ")
    
    if per_account_limits['likes'] < 30:
        risk_score += 2
        risk_factors.append(f"üî¥ –õ–∞–π–∫–∏: {per_account_limits['likes']}/–¥–µ–Ω—å - –∫—Ä–∏—Ç–∏—á–Ω–æ –º–∞–ª–æ")
    elif per_account_limits['likes'] < 50:
        risk_score += 1
        risk_factors.append(f"üü° –õ–∞–π–∫–∏: {per_account_limits['likes']}/–¥–µ–Ω—å - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ")
    else:
        risk_factors.append(f"‚úÖ –õ–∞–π–∫–∏: {per_account_limits['likes']}/–¥–µ–Ω—å - —Ö–æ—Ä–æ—à–æ")
    
    if per_account_limits['follows'] < 8:
        risk_score += 1
        risk_factors.append(f"üü° –ü–æ–¥–ø–∏—Å–∫–∏: {per_account_limits['follows']}/–¥–µ–Ω—å - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ")
    else:
        risk_factors.append(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏: {per_account_limits['follows']}/–¥–µ–Ω—å - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ")
    
    print("‚ö†Ô∏è  –ê–ù–ê–õ–ò–ó –†–ò–°–ö–û–í:")
    print("-" * 40)
    for factor in risk_factors:
        print(f"   {factor}")
    print()
    
    if risk_score <= 1:
        risk_level = "üü¢ –ù–ò–ó–ö–ò–ô"
        recommendation = "–û–¢–õ–ò–ß–ù–û - –º–æ–±–∏–ª—å–Ω—ã–µ —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏–¥–µ–∞–ª—å–Ω—ã!"
    elif risk_score <= 3:
        risk_level = "üü° –°–†–ï–î–ù–ò–ô"
        recommendation = "–•–û–†–û–®–û - —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    else:
        risk_level = "üî¥ –í–´–°–û–ö–ò–ô"
        recommendation = "–†–ò–°–ö–û–í–ê–ù–ù–û - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"
    
    print(f"üéØ –û–¶–ï–ù–ö–ê –†–ò–°–ö–ê: {risk_level}")
    print(f"üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: {recommendation}")
    print()
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    print("üí∞ –°–†–ê–í–ù–ï–ù–ò–ï –°–¢–û–ò–ú–û–°–¢–ò (–º–µ—Å—è—Ü):")
    print("=" * 80)
    
    # –†–∞—Å—á–µ—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ (–ø—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞)
    daily_actions_per_account = 100  # –ª–∞–π–∫–∏ + –ø–æ–¥–ø–∏—Å–∫–∏ + –ø—Ä–æ—Å–º–æ—Ç—Ä—ã
    monthly_actions = daily_actions_per_account * accounts_count * 30
    estimated_gb = monthly_actions / 1000  # –ø—Ä–∏–º–µ—Ä–Ω–æ 1000 –¥–µ–π—Å—Ç–≤–∏–π = 1GB
    
    costs = {
        '–û–¥–∏–Ω —Å—Ç–∞—Ç–∏—á–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π': 70,
        '–ú–æ–±–∏–ª—å–Ω—ã–µ —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ': int(estimated_gb * 25),
        '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö': math.ceil(accounts_count / 5) * 70,
        'Residential —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ': int(estimated_gb * 8),
        '–°–º–µ—à–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è': (math.ceil(accounts_count * 0.2) * 70) + (math.ceil(accounts_count * 0.8 / 8) * 15)
    }
    
    print(f"Estimated monthly traffic: ~{estimated_gb:.1f} GB")
    print("-" * 50)
    
    sorted_costs = sorted(costs.items(), key=lambda x: x[1])
    
    for i, (strategy, cost) in enumerate(sorted_costs, 1):
        if i == 1:
            print(f"{i}. {strategy:<30} ${cost:3} üíö (–°–ê–ú–´–ô –î–ï–®–ï–í–´–ô)")
        elif strategy == '–ú–æ–±–∏–ª—å–Ω—ã–µ —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ':
            print(f"{i}. {strategy:<30} ${cost:3} üì± (–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ô)")
        else:
            print(f"{i}. {strategy:<30} ${cost:3}")
    
    print()
    
    # –õ—É—á—à–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö
    print("üèÜ –õ–£–ß–®–ò–ï –ü–†–û–í–ê–ô–î–ï–†–´ –ú–û–ë–ò–õ–¨–ù–´–• –†–û–¢–ê–¶–ò–û–ù–ù–´–•:")
    print("=" * 80)
    
    providers = [
        {
            'name': 'Smartproxy Mobile',
            'price': '$25-35/GB',
            'rotation': '10-30 –º–∏–Ω',
            'locations': 'US, UK, DE, CA',
            'operators': 'Verizon, AT&T, T-Mobile',
            'rating': '9/10',
            'pros': '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å',
            'cons': '–î–æ—Ä–æ–≥–æ–≤–∞—Ç–æ'
        },
        {
            'name': 'LunaProxy Mobile',
            'price': '$20-28/GB', 
            'rotation': '15-45 –º–∏–Ω',
            'locations': 'US, EU, AS',
            'operators': '–í—Å–µ –∫—Ä—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã',
            'rating': '8.5/10',
            'pros': '–•–æ—Ä–æ—à–∞—è —Ü–µ–Ω–∞, –º–Ω–æ–≥–æ –ª–æ–∫–∞—Ü–∏–π',
            'cons': '–ò–Ω–æ–≥–¥–∞ –º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
        },
        {
            'name': 'ProxyEmpire Mobile',
            'price': '$22-30/GB',
            'rotation': '10-60 –º–∏–Ω',
            'locations': 'Global',
            'operators': 'Premium carriers only',
            'rating': '8/10',
            'pros': '–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ',
            'cons': '–ü–µ—Ä–µ–º–µ–Ω—á–∏–≤–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ'
        },
        {
            'name': 'IPRoyal Mobile',
            'price': '$18-25/GB',
            'rotation': '20-40 –º–∏–Ω',
            'locations': 'US, EU',
            'operators': 'Major carriers',
            'rating': '7.5/10',
            'pros': '–ë—é–¥–∂–µ—Ç–Ω–∞—è —Ü–µ–Ω–∞',
            'cons': '–ú–µ–Ω—å—à–µ —Ñ—É–Ω–∫—Ü–∏–π'
        }
    ]
    
    for provider in providers:
        print(f"üì± {provider['name']} - {provider['rating']}")
        print(f"   üí∞ –¶–µ–Ω–∞: {provider['price']}")
        print(f"   üîÑ –†–æ—Ç–∞—Ü–∏—è: {provider['rotation']}")
        print(f"   üåç –õ–æ–∫–∞—Ü–∏–∏: {provider['locations']}")
        print(f"   üì° –û–ø–µ—Ä–∞—Ç–æ—Ä—ã: {provider['operators']}")
        print(f"   ‚úÖ –ü–ª—é—Å—ã: {provider['pros']}")
        print(f"   ‚ùå –ú–∏–Ω—É—Å—ã: {provider['cons']}")
        print()

def mobile_rotating_recommendations():
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏"""
    
    print("üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –ú–û–ë–ò–õ–¨–ù–´–• –†–û–¢–ê–¶–ò–û–ù–ù–´–•")
    print("=" * 80)
    
    print("üìã –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:")
    print("-" * 40)
    print("üîÑ STICKY SESSIONS:")
    print("   ‚Ä¢ –í—Ä–µ–º—è —Å–µ—Å—Å–∏–∏: 15-30 –º–∏–Ω—É—Ç")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤")
    print("   ‚Ä¢ Graceful reconnection –ø—Ä–∏ —Å–º–µ–Ω–µ IP")
    print()
    
    print("‚è∞ –¢–ê–ô–ú–ò–ù–ì–ò:")
    print("   ‚Ä¢ –ü–∞—É–∑–∞ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏: 3-7 —Å–µ–∫—É–Ω–¥")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ–Ω—ã IP –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç")
    print("   ‚Ä¢ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    print()
    
    print("üé≠ HUMAN-LIKE BEHAVIOR:")
    print("   ‚Ä¢ –°–ª—É—á–∞–π–Ω—ã–µ User-Agents –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö")
    print("   ‚Ä¢ –ò–º–∏—Ç–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –≥–æ—Ä–æ–¥–∞–º")
    print("   ‚Ä¢ –†–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print()
    
    print("üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì:")
    print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ IP")
    print("   ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–º–µ–Ω IP")
    print("   ‚Ä¢ –ê–ª–µ—Ä—Ç—ã –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
    print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º —Å–≤—è–∑–∏")
    print()
    
    print("üí° –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø:")
    print("-" * 40)
    print("üéØ –°–¢–†–ê–¢–ï–ì–ò–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:")
    print("   ‚Ä¢ –ù–µ –±–æ–ª–µ–µ 50% –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
    print("   ‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –∑–æ–Ω–∞–º")
    print("   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç VIP –∞–∫–∫–∞—É–Ω—Ç–∞–º")
    print("   ‚Ä¢ Backup —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–∏ —Å–±–æ—è—Ö")
    print()
    
    print("üîÑ –†–û–¢–ê–¶–ò–û–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê:")
    print("   ‚Ä¢ Soft rotation - –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–µ—Å—Å–∏–π")
    print("   ‚Ä¢ IP warming –¥–ª—è –Ω–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤")
    print("   ‚Ä¢ Blacklist –¥–ª—è –ø–ª–æ—Ö–∏—Ö IP")
    print("   ‚Ä¢ Whitelist –¥–ª—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    analyze_mobile_rotating_proxies()
    print()
    mobile_rotating_recommendations() 
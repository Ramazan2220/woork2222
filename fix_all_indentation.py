#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
"""

import os

def fix_file_indentation(file_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—Ç—É–ø—ã –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ñ–∞–π–ª–µ"""
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        fixed = False
        
        for i, line in enumerate(lines):
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
            
            # profile_manager.py —Å—Ç—Ä–æ–∫–∞ 220
            if 'return True, "–°—Å—ã–ª–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"' in line and not line.startswith('                '):
                lines[i] = '                return True, "–°—Å—ã–ª–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"\n'
                print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {i+1} –≤ {file_path}: return True")
                fixed = True
            
            # client.py —Å—Ç—Ä–æ–∫–∏ —Å proxy
            if 'proxy_url = f"{proxy.protocol}://{proxy.host}:{proxy.port}"' in line and not line.startswith('                        '):
                lines[i] = '                        proxy_url = f"{proxy.protocol}://{proxy.host}:{proxy.port}"\n'
                print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {i+1} –≤ {file_path}: proxy_url basic")
                fixed = True
            
            if 'if (proxy.username and proxy.password' in line and not line.startswith('                        '):
                lines[i] = line.replace(line[:line.index('if')], '                        ')
                print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {i+1} –≤ {file_path}: if proxy.username")
                fixed = True
            
            if 'proxy_url = f"{proxy.protocol}://{proxy.username}' in line and not line.startswith('                            '):
                lines[i] = line.replace(line[:line.index('proxy_url')], '                            ')
                print(f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {i+1} –≤ {file_path}: proxy_url auth")
                fixed = True
        
        if fixed:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.writelines(lines)
            print(f"‚úÖ –û—Ç—Å—Ç—É–ø—ã –≤ {file_path} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        
        return fixed
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {e}")
        return False

def fix_all_indentation():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Å—Ç—É–ø—ã –≤–æ –≤—Å–µ—Ö Python —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
    
    files_to_fix = [
        'instagram/client.py',
        'instagram/profile_manager.py',
    ]
    
    total_fixed = 0
    
    for file_path in files_to_fix:
        if os.path.exists(file_path):
            if fix_file_indentation(file_path):
                total_fixed += 1
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüéØ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {total_fixed}")
    print("‚úÖ –í—Å–µ –æ—Ç—Å—Ç—É–ø—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã! –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å python main.py")

if __name__ == "__main__":
    fix_all_indentation() 
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç –º—É—Å–æ—Ä–∞
"""

import os
import shutil
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –§–∞–π–ª—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
FILES_TO_DELETE = [
    # Fix —Å–∫—Ä–∏–ø—Ç—ã (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã)
    "fix_all_indentation.py",
    "fix_client_indentation.py",
    "fix_encoding.py",
    "fix_windows_logging.py",
    "fix_windows_simple.py",
    "fix_database_models.py",
    "fix_database_schema.py",
    "fix_database.py",
    "fix_db_quick.py",
    "fix_task_statuses.py",
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    "test_profile_links.py",
    "test_parallel_profiles.py",
    "test_optimized_profiles.py",
    "demo_instagrapi_analytics.py",
    "detailed_post_analytics.py",
    
    # –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã
    "telegram_bot/handlers/publish_handlers_backup_20250709_144115.py",
    "telegram_bot/handlers/publish_handlers_old.py",
    "telegram_bot/handlers/publish_handlers.py.backup",
    
    # –ê—Ä—Ö–∏–≤—ã (–ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø–∞–ø–∫—É backups)
    "instagram_bot_vds.tar.gz",
    "instagram_bot_windows_vds.zip",
    
    # –î—É–±–ª–∏—Ä—É—é—â–∏–µ —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π
    "migrate_database.py",  # –£–∂–µ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ –º–∏–≥—Ä–∞—Ü–∏–π
    "migrate_follow_tables.py",
    "migrate_groups_tables.py",
    "recreate_follow_tables.py",
    
    # –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Å–∫—Ä–∏–ø—Ç—ã
    "reset_problematic_accounts.py",
    "quick_account_check.py",
    "single_proxy_analysis.py",
    "mobile_rotating_analysis.py",
    "check_accounts_detailed.py",
    "check_paths.py",
    "check_proxies.py",
    "check_account_statuses.py",
    "debug_email.py",
    "debug_proxies.py",
    "diagnose_proxiware.py",
    
    # –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª—ã (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ docs)
    "api_integration_plan.md",
    "proxiware_setup_guide.md",
    "proxy_recommendations.md",
]

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
DIRECTORIES_TO_ORGANIZE = {
    "web-dashboard": "archive/web-dashboard-old",  # –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è
    "instagram-automation-dashboard": "archive/dashboard-v1",  # –ï—â–µ –æ–¥–Ω–∞ –≤–µ—Ä—Å–∏—è
    "test_content": "archive/test_content",
    "working_accounts": "archive/working_accounts",
    "email_logs": "archive/email_logs",
}

# MD —Ñ–∞–π–ª—ã –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ docs
MD_FILES_TO_MOVE = [
    "AUTOFOLLOW_COMPLETE_GUIDE.md",
    "AUTOFOLLOW_MODULE.md", 
    "FINAL_FIXES_REPORT.md",
    "FINAL_INTEGRATION_REPORT.md",
    "FIXES_SUMMARY.md",
    "HIGHLIGHTS_SYSTEM_DESIGN.md",
    "INTEGRATION_SUMMARY.md",
    "INTEREST_WARMUP_DOCUMENTATION.md",
    "MEGA_UPLOAD_GUIDE.md",
    "PROFILE_SETUP_INTEGRATION.md",
    "REELS_FIXES_REPORT.md",
    "REELS_SYSTEM_DOCUMENTATION.md",
    "REELS_TESTING_GUIDE.md",
    "RESIDENTIAL_PROXY_SETUP.md",
    "SAFETY_LIMITS_REPORT.md",
    "SYSTEM_MONITORING_README.md",
    "TELEGRAM_BOT_AUDIT_REPORT.md",
    "TESTING_README.md",
    "TESTING_RESULTS_20250613.md",
    "UNIQUIFIER_README.md",
    "VDS_MIGRATION_GUIDE.md",
    "README_WEB_BOT.md",
]

def cleanup_project():
    """–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –æ—Ç –º—É—Å–æ—Ä–∞"""
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs("archive", exist_ok=True)
    os.makedirs("docs/guides", exist_ok=True)
    os.makedirs("docs/reports", exist_ok=True)
    os.makedirs("data/backups", exist_ok=True)
    
    deleted_files = 0
    moved_files = 0
    errors = 0
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    logger.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    for file in FILES_TO_DELETE:
        if os.path.exists(file):
            try:
                if file.endswith(('.tar.gz', '.zip')):
                    # –ê—Ä—Ö–∏–≤—ã –ø–µ—Ä–µ–º–µ—â–∞–µ–º
                    shutil.move(file, f"archive/{os.path.basename(file)}")
                    logger.info(f"üì¶ –ü–µ—Ä–µ–º–µ—â–µ–Ω –∞—Ä—Ö–∏–≤: {file} -> archive/")
                    moved_files += 1
                else:
                    os.remove(file)
                    logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω: {file}")
                    deleted_files += 1
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file}: {e}")
                errors += 1
    
    # –†–µ–æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    logger.info("\nüìÅ –†–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    for old_dir, new_dir in DIRECTORIES_TO_ORGANIZE.items():
        if os.path.exists(old_dir):
            try:
                os.makedirs(os.path.dirname(new_dir), exist_ok=True)
                shutil.move(old_dir, new_dir)
                logger.info(f"‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ: {old_dir} -> {new_dir}")
                moved_files += 1
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {old_dir}: {e}")
                errors += 1
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    logger.info("\nüìö –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
    for md_file in MD_FILES_TO_MOVE:
        if os.path.exists(md_file):
            try:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–ø–∞–ø–∫—É
                if "GUIDE" in md_file or "README" in md_file or "DOCUMENTATION" in md_file:
                    dest = f"docs/guides/{md_file}"
                else:
                    dest = f"docs/reports/{md_file}"
                
                shutil.move(md_file, dest)
                logger.info(f"‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ: {md_file} -> {dest}")
                moved_files += 1
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è {md_file}: {e}")
                errors += 1
    
    # –ò—Ç–æ–≥–∏
    logger.info(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:")
    logger.info(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {deleted_files}")
    logger.info(f"   üìÅ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫: {moved_files}")
    logger.info(f"   ‚ùå –û—à–∏–±–æ–∫: {errors}")
    
    # –°–æ–∑–¥–∞–µ–º .gitignore –¥–ª—è archive
    gitignore_content = """# –ê—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
*
!.gitignore
"""
    with open("archive/.gitignore", "w") as f:
        f.write(gitignore_content)
    
    logger.info("\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    print("üßπ –û–ß–ò–°–¢–ö–ê –ü–†–û–ï–ö–¢–ê")
    print("–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("- –£–¥–∞–ª–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ fix-—Å–∫—Ä–∏–ø—Ç—ã")
    print("- –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –≤ archive/")
    print("- –û—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≤ docs/")
    print("- –£–¥–∞–ª–∏—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏–µ —Ñ–∞–π–ª—ã")
    
    response = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): ")
    
    if response.lower() == 'yes':
        cleanup_project()
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞") 
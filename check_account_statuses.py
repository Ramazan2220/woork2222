#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Instagram
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—á—Ç–æ–π –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import init_db, get_instagram_accounts
from datetime import datetime

def check_account_statuses():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç—É—Å—ã –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–û–í –ê–ö–ö–ê–£–ù–¢–û–í")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    accounts = get_instagram_accounts()
    
    if not accounts:
        print("‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤!")
        return
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
    print()
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    status_groups = {}
    
    for account in accounts:
        status = getattr(account, 'status', 'active')
        is_active = getattr(account, 'is_active', True)
        last_error = getattr(account, 'last_error', None)
        last_check = getattr(account, 'last_check', None)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        if not is_active:
            if status in ['email_timeout', 'email_failed', 'imap_auth_failed', 'email_auth_failed']:
                real_status = f"‚ùå {status}"
            else:
                real_status = "‚ùå inactive"
        elif status == 'active':
            real_status = "‚úÖ active"
        else:
            real_status = f"‚ö†Ô∏è {status}"
        
        if real_status not in status_groups:
            status_groups[real_status] = []
        
        status_groups[real_status].append({
            'account': account,
            'last_error': last_error,
            'last_check': last_check
        })
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –°–¢–ê–¢–£–°–ê–ú:")
    print("-" * 30)
    
    for status, accounts_list in status_groups.items():
        print(f"{status}: {len(accounts_list)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–∞–º
    problematic_statuses = [s for s in status_groups.keys() if s.startswith("‚ùå") or s.startswith("‚ö†Ô∏è")]
    
    if problematic_statuses:
        print("üö® –ü–†–û–ë–õ–ï–ú–ù–´–ï –ê–ö–ö–ê–£–ù–¢–´:")
        print("-" * 30)
        
        for status in problematic_statuses:
            accounts_list = status_groups[status]
            print(f"\n{status} ({len(accounts_list)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤):")
            
            for item in accounts_list:
                account = item['account']
                last_error = item['last_error']
                last_check = item['last_check']
                
                print(f"  ‚Ä¢ {account.username} (ID: {account.id})")
                print(f"    Email: {account.email}")
                
                if last_error:
                    error_preview = last_error[:100] + "..." if len(last_error) > 100 else last_error
                    print(f"    –û—à–∏–±–∫–∞: {error_preview}")
                
                if last_check:
                    print(f"    –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {last_check}")
                
                print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    active_accounts = status_groups.get("‚úÖ active", [])
    if active_accounts:
        print(f"‚úÖ –ê–ö–¢–ò–í–ù–´–ï –ê–ö–ö–ê–£–ù–¢–´ ({len(active_accounts)}):")
        print("-" * 30)
        
        for item in active_accounts[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            account = item['account']
            print(f"  ‚Ä¢ {account.username} - {account.email}")
        
        if len(active_accounts) > 10:
            print(f"  ... –∏ –µ—â–µ {len(active_accounts) - 10} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    print()
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("-" * 30)
    
    email_problem_accounts = []
    for status in status_groups:
        if 'email' in status.lower():
            email_problem_accounts.extend(status_groups[status])
    
    if email_problem_accounts:
        print(f"üìß {len(email_problem_accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–º–µ—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—á—Ç–æ–π")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å email-–∞–¥—Ä–µ—Å–∞")
    
    inactive_accounts = []
    for status in status_groups:
        if status.startswith("‚ùå"):
            inactive_accounts.extend(status_groups[status])
    
    if inactive_accounts:
        print(f"üîÑ {len(inactive_accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã")

if __name__ == "__main__":
    check_account_statuses() 
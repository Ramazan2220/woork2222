#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –ø–µ—Ä–µ–Ω–æ—Å—É –Ω–∞ VDS
"""

import os
import shutil
import json
import tarfile
from pathlib import Path

def create_deployment_package():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ VDS"""
    
    print("üöÄ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –ü–ï–†–ï–ù–û–°–£ –ù–ê VDS")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞
    include_files = [
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        "main.py",
        "requirements.txt",
        
        # –ü–∞–ø–∫–∏ —Å –∫–æ–¥–æ–º
        "telegram_bot/",
        "instagram/", 
        "database/",
        "utils/",
        "profile_setup/",
        "instagram_api/",
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        ".env",
        "config.py",
        
        # –î–∞–Ω–Ω—ã–µ (–ë–ï–ó –∞–∫–∫–∞—É–Ω—Ç–æ–≤)
        "data/database.db",
        "data/media/",
        
        # –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        "devices/",
        
        # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        "docs/",
    ]
    
    # –§–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –ø–µ—Ä–µ–Ω–æ—Å–∏–º
    exclude_patterns = [
        "bot_env*",
        "venv*", 
        "web_env*",
        "__pycache__",
        "*.pyc",
        "*.log",
        "data/accounts/*/session.json",  # –°–µ—Å—Å–∏–∏ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å
        "email_logs/",
        "working_accounts/",
        ".DS_Store",
        "test_*.py",
        "fix_*.py",
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    deploy_dir = "vds_deployment"
    if os.path.exists(deploy_dir):
        shutil.rmtree(deploy_dir)
    os.makedirs(deploy_dir)
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: {deploy_dir}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    copied_count = 0
    for item in include_files:
        src = item
        if os.path.exists(src):
            dst = os.path.join(deploy_dir, item)
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            os.makedirs(os.path.dirname(dst), exist_ok=True)
            
            if os.path.isdir(src):
                # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏
                shutil.copytree(src, dst, ignore=shutil.ignore_patterns(*exclude_patterns), dirs_exist_ok=True)
                print(f"üìÇ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –ø–∞–ø–∫–∞: {item}")
            else:
                # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
                shutil.copy2(src, dst)
                print(f"üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: {item}")
            copied_count += 1
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {item}")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    create_deployment_instructions(deploy_dir)
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    archive_name = "instagram_bot_vds.tar.gz"
    with tarfile.open(archive_name, "w:gz") as tar:
        tar.add(deploy_dir, arcname="instagram_bot")
    
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: {archive_name}")
    print(f"üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {copied_count}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    size_mb = os.path.getsize(archive_name) / 1024 / 1024
    print(f"üìè –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: {size_mb:.1f} MB")
    
    return archive_name

def create_deployment_instructions(deploy_dir):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é"""
    
    instructions = """# üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ –ù–ê VDS

## 1. –°–ò–°–¢–ï–ú–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø
- Ubuntu 20.04+ / CentOS 8+ / Debian 11+
- Python 3.9+
- 2GB RAM –º–∏–Ω–∏–º—É–º
- 10GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞

## 2. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô

### Ubuntu/Debian:
```bash
sudo apt update
sudo apt install -y python3 python3-pip python3-venv git sqlite3
sudo apt install -y python3-dev build-essential
```

### CentOS/RHEL:
```bash
sudo yum update -y
sudo yum install -y python3 python3-pip git sqlite
sudo yum groupinstall -y "Development Tools"
```

## 3. –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï

### –†–∞—Å–ø–∞–∫–æ–≤–∫–∞:
```bash
tar -xzf instagram_bot_vds.tar.gz
cd instagram_bot
```

### –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
```bash
python3 -m venv bot_env
source bot_env/bin/activate
```

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
```bash
pip install --upgrade pip
pip install -r requirements.txt
```

## 4. –ù–ê–°–¢–†–û–ô–ö–ê

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env —Ñ–∞–π–ª–∞:
```bash
nano .env
```

### –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
- TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω
- ENCRYPTION_KEY=–≤–∞—à_–∫–ª—é—á_—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
- DATABASE_URL=sqlite:///data/database.db

### –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:
```bash
python -c "from database.db_manager import init_database; init_database()"
```

## 5. –ó–ê–ü–£–°–ö

### –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫:
```bash
python main.py
```

### –ó–∞–ø—É—Å–∫ –∫–∞–∫ —Å–µ—Ä–≤–∏—Å (systemd):
```bash
sudo cp deployment/instagram_bot.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable instagram_bot
sudo systemctl start instagram_bot
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:
```bash
sudo systemctl status instagram_bot
sudo journalctl -u instagram_bot -f
```

## 6. –ù–ê–°–¢–†–û–ô–ö–ê FIREWALL

```bash
# –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–æ—Ä—Ç—ã
sudo ufw allow 22/tcp    # SSH
sudo ufw allow 80/tcp    # HTTP (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
sudo ufw allow 443/tcp   # HTTPS
sudo ufw enable
```

## 7. –ú–û–ù–ò–¢–û–†–ò–ù–ì

### –õ–æ–≥–∏:
```bash
tail -f data/logs/bot.log
tail -f data/logs/telegram_errors.log
```

### –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:
```bash
htop
df -h
free -h
```

## 8. BACKUP

### –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞:
```bash
tar -czf backup_$(date +%Y%m%d_%H%M%S).tar.gz data/ .env
```

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±—ç–∫–∞–ø (cron):
```bash
# –î–æ–±–∞–≤–∏—Ç—å –≤ crontab:
0 2 * * * cd /path/to/bot && tar -czf backup_$(date +\\%Y\\%m\\%d).tar.gz data/ .env
```

## 9. –û–ë–ù–û–í–õ–ï–ù–ò–ï

```bash
# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
sudo systemctl stop instagram_bot

# –ë—ç–∫–∞–ø
tar -czf backup_before_update.tar.gz data/ .env

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
git pull  # –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—Ä—Ö–∏–≤–∞

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
source bot_env/bin/activate
pip install -r requirements.txt

# –ó–∞–ø—É—Å–∫
sudo systemctl start instagram_bot
```

## 10. –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú

### –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏:
```bash
sudo chown -R $USER:$USER /path/to/bot
chmod +x main.py
```

### –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏:
```bash
pip install --force-reinstall -r requirements.txt
```

### –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤:
```bash
find data/logs/ -name "*.log" -mtime +7 -delete
```
"""

    with open(os.path.join(deploy_dir, "DEPLOYMENT_GUIDE.md"), "w", encoding="utf-8") as f:
        f.write(instructions)
    
    # –°–æ–∑–¥–∞–µ–º systemd service —Ñ–∞–π–ª
    service_content = """[Unit]
Description=Instagram Telegram Bot
After=network.target

[Service]
Type=simple
User=ubuntu
WorkingDirectory=/home/ubuntu/instagram_bot
Environment=PATH=/home/ubuntu/instagram_bot/bot_env/bin
ExecStart=/home/ubuntu/instagram_bot/bot_env/bin/python main.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
"""
    
    service_dir = os.path.join(deploy_dir, "deployment")
    os.makedirs(service_dir, exist_ok=True)
    
    with open(os.path.join(service_dir, "instagram_bot.service"), "w") as f:
        f.write(service_content)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    startup_script = """#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

BOT_DIR="/home/ubuntu/instagram_bot"
cd $BOT_DIR

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source bot_env/bin/activate

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
python main.py
"""
    
    with open(os.path.join(service_dir, "start_bot.sh"), "w") as f:
        f.write(startup_script)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod(os.path.join(service_dir, "start_bot.sh"), 0o755)

def show_vds_recommendations():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É VDS"""
    
    print("\n" + "="*60)
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û VDS")
    print("="*60)
    
    print("\nüñ•Ô∏è  –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:")
    print("‚Ä¢ CPU: 2 —è–¥—Ä–∞")
    print("‚Ä¢ RAM: 2GB")
    print("‚Ä¢ –î–∏—Å–∫: 20GB SSD")
    print("‚Ä¢ –û–°: Ubuntu 20.04 LTS")
    
    print("\nüî• –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
    print("‚Ä¢ CPU: 4 —è–¥—Ä–∞")
    print("‚Ä¢ RAM: 4GB")
    print("‚Ä¢ –î–∏—Å–∫: 40GB SSD")
    print("‚Ä¢ –°–µ—Ç—å: 100 –ú–±–∏—Ç/—Å")
    
    print("\nüåç –ü–†–û–í–ê–ô–î–ï–†–´ VDS (–¥–ª—è –†–æ—Å—Å–∏–∏):")
    print("‚Ä¢ Selectel - —Ö–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    print("‚Ä¢ Timeweb - –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã")  
    print("‚Ä¢ REG.RU - —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å")
    print("‚Ä¢ FirstVDS - –±—ã—Å—Ç—Ä—ã–µ –¥–∏—Å–∫–∏")
    
    print("\nüåé –ú–ï–ñ–î–£–ù–ê–†–û–î–ù–´–ï –ü–†–û–í–ê–ô–î–ï–†–´:")
    print("‚Ä¢ DigitalOcean - –ø—Ä–æ—Å—Ç–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("‚Ä¢ Vultr - —Ö–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ")
    print("‚Ä¢ Linode - —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å")
    print("‚Ä¢ AWS/GCP - –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    
    print("\nüìç –õ–û–ö–ê–¶–ò–Ø –°–ï–†–í–ï–†–û–í:")
    print("‚Ä¢ –ú–æ—Å–∫–≤–∞/–°–ü–± - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –†–æ—Å—Å–∏–∏")
    print("‚Ä¢ –ï–≤—Ä–æ–ø–∞ - –∫–æ–º–ø—Ä–æ–º–∏—Å—Å —Å–∫–æ—Ä–æ—Å—Ç—å/—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å")
    print("‚Ä¢ –°–®–ê - –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å Instagram API")

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    archive_name = create_deployment_package()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    show_vds_recommendations()
    
    print(f"\nüéâ –ì–û–¢–û–í–û!")
    print(f"üì¶ –ê—Ä—Ö–∏–≤ –¥–ª—è VDS: {archive_name}")
    print(f"üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: vds_deployment/DEPLOYMENT_GUIDE.md")
    print(f"\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print(f"1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ {archive_name} –Ω–∞ –≤–∞—à VDS")
    print(f"2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ DEPLOYMENT_GUIDE.md")
    print(f"3. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª!")
#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω –±–æ—Ç–∞
"""

import os
import sys
import re

def main():
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê –ê–î–ú–ò–ù –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    admin_token = os.getenv('ADMIN_BOT_TOKEN')
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN', '8092949155:AAEs6GSSqEU4C_3qNkskqVNAdcoAUHZi0fE')
    
    if admin_token:
        print(f"‚úÖ ADMIN_BOT_TOKEN —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(f"üìù –¢–æ–∫–µ–Ω: {admin_token[:20]}...")
        
        choice = input("\nü§î –•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω? (y/N): ").lower()
        if choice not in ['y', 'yes', '–¥–∞']:
            test_admin_bot()
            return
    else:
        print("‚ö†Ô∏è ADMIN_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print(f"üîÑ –°–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–∫–µ–Ω: {telegram_token[:20]}...")
    
    print("\nüì± –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ê–î–ú–ò–ù –ë–û–¢–ê:")
    print("1Ô∏è‚É£ –ò–¥–∏—Ç–µ –∫ @BotFather –≤ Telegram")
    print("2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: /newbot")
    print("3Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–æ—Ç–∞: Instagram Admin Panel")
    print("4Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ username: instagram_admin_panel_bot (–∏–ª–∏ –¥—Ä—É–≥–æ–π –¥–æ—Å—Ç—É–ø–Ω—ã–π)")
    print("5Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
    
    print("\n" + "="*50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    while True:
        token = input("üìã –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω –±–æ—Ç–∞: ").strip()
        
        if not token:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞
        if not re.match(r'^\d+:[A-Za-z0-9_-]+$', token):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å: 123456789:ABC-DEF1234...")
            continue
        
        if len(token) < 30:
            print("‚ùå –¢–æ–∫–µ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
            continue
        
        break
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
    save_choice = input(f"\nüíæ –ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω?\n1Ô∏è‚É£ –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n2Ô∏è‚É£ –í —Ñ–∞–π–ª–µ config\n3Ô∏è‚É£ –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n–í—ã–±–µ—Ä–∏—Ç–µ (1/2/3): ").strip()
    
    if save_choice == "1":
        save_to_env(token)
    elif save_choice == "2":
        save_to_config(token)
    else:
        show_manual_setup(token)
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –±–æ—Ç–∞...")
    test_admin_bot()

def save_to_env(token):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print(f"\nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º shell
    shell = os.getenv('SHELL', '/bin/bash')
    
    if 'zsh' in shell:
        config_file = os.path.expanduser('~/.zshrc')
    elif 'bash' in shell:
        config_file = os.path.expanduser('~/.bashrc')
    else:
        config_file = os.path.expanduser('~/.profile')
    
    export_line = f'export ADMIN_BOT_TOKEN="{token}"'
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å
        if os.path.exists(config_file):
            with open(config_file, 'r') as f:
                content = f.read()
            
            if 'ADMIN_BOT_TOKEN' in content:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
                updated_content = re.sub(
                    r'export ADMIN_BOT_TOKEN="[^"]*"',
                    export_line,
                    content
                )
                if updated_content == content:
                    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
                    updated_content = content + f'\n{export_line}\n'
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                updated_content = content + f'\n# Instagram Admin Bot Token\n{export_line}\n'
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
            updated_content = f'# Instagram Admin Bot Token\n{export_line}\n'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(config_file, 'w') as f:
            f.write(updated_content)
        
        print(f"‚úÖ –¢–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ {config_file}")
        print(f"üîÑ –í—ã–ø–æ–ª–Ω–∏—Ç–µ: source {config_file}")
        print(f"üí° –ò–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        os.environ['ADMIN_BOT_TOKEN'] = token
        print("‚úÖ –¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        show_manual_setup(token)

def save_to_config(token):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_file = 'admin_bot/config/settings.py'
    
    try:
        with open(config_file, 'r') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–æ–∫–µ–Ω–æ–º
        updated_content = re.sub(
            r'ADMIN_BOT_TOKEN = os\.getenv\(\s*\'ADMIN_BOT_TOKEN\',\s*None\s*\)',
            f'ADMIN_BOT_TOKEN = os.getenv(\\n    \'ADMIN_BOT_TOKEN\', \\n    \'{token}\'  # –ê–¥–º–∏–Ω —Ç–æ–∫–µ–Ω\\n)',
            content
        )
        
        with open(config_file, 'w') as f:
            f.write(updated_content)
        
        print(f"‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {config_file}")
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ –≤ —Ñ–∞–π–ª–µ!")
        print("üîí –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª: {e}")
        show_manual_setup(token)

def show_manual_setup(token):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print(f"\nüìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê:")
    print(f"1Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ –≤ ~/.bashrc –∏–ª–∏ ~/.zshrc:")
    print(f'    export ADMIN_BOT_TOKEN="{token}"')
    print(f"2Ô∏è‚É£ –í—ã–ø–æ–ª–Ω–∏—Ç–µ: source ~/.bashrc (–∏–ª–∏ ~/.zshrc)")
    print(f"3Ô∏è‚É£ –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏:")
    print(f'    export ADMIN_BOT_TOKEN="{token}"')

def test_admin_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –±–æ—Ç–∞"""
    try:
        print("\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
        import subprocess
        result = subprocess.run([sys.executable, 'test_admin_bot.py'], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
            
            run_choice = input("\nüöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–¥–º–∏–Ω –±–æ—Ç–∞? (Y/n): ").lower()
            if run_choice not in ['n', 'no', '–Ω–µ—Ç']:
                print("ü§ñ –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω –±–æ—Ç–∞...")
                subprocess.run([sys.executable, 'test_admin_bot.py', '--run'])
        else:
            print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã:")
            print(result.stdout)
            print(result.stderr)
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 
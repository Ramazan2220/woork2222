#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–î–µ–º–æ-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏
"""

import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from admin_bot.services.user_service import UserService
from admin_bot.models.user import SubscriptionPlan, UserStatus

def create_demo_users():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏"""
    
    user_service = UserService()
    
    # –î–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    demo_users = [
        {
            'telegram_id': 111111111,
            'username': 'test_user_1day',
            'plan': SubscriptionPlan.FREE_TRIAL_1_DAY,
            'days_ago': 0  # –¢–æ–ª—å–∫–æ —á—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è
        },
        {
            'telegram_id': 222222222,
            'username': 'test_user_3days',
            'plan': SubscriptionPlan.FREE_TRIAL_3_DAYS,
            'days_ago': 1  # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤—á–µ—Ä–∞
        },
        {
            'telegram_id': 333333333,
            'username': 'test_user_7days',
            'plan': SubscriptionPlan.FREE_TRIAL_7_DAYS,
            'days_ago': 5  # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
        },
        {
            'telegram_id': 444444444,
            'username': 'test_user_30days',
            'plan': SubscriptionPlan.SUBSCRIPTION_30_DAYS,
            'days_ago': 10  # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 10 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
        },
        {
            'telegram_id': 555555555,
            'username': 'test_user_90days',
            'plan': SubscriptionPlan.SUBSCRIPTION_90_DAYS,
            'days_ago': 30  # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –º–µ—Å—è—Ü –Ω–∞–∑–∞–¥
        },
        {
            'telegram_id': 666666666,
            'username': 'test_user_lifetime',
            'plan': SubscriptionPlan.SUBSCRIPTION_LIFETIME,
            'days_ago': 60  # –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è 2 –º–µ—Å—è—Ü–∞ –Ω–∞–∑–∞–¥
        },
        {
            'telegram_id': 777777777,
            'username': 'expired_user',
            'plan': SubscriptionPlan.FREE_TRIAL_3_DAYS,
            'days_ago': 5,  # –¢—Ä–∏–∞–ª –∏—Å—Ç–µ–∫ 2 –¥–Ω—è –Ω–∞–∑–∞–¥
            'status': UserStatus.EXPIRED
        },
        {
            'telegram_id': 888888888,
            'username': 'blocked_user',
            'plan': SubscriptionPlan.SUBSCRIPTION_30_DAYS,
            'days_ago': 15,
            'status': UserStatus.BLOCKED
        }
    ]
    
    print("üé≠ –°–û–ó–î–ê–ù–ò–ï –î–ï–ú–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 50)
    
    created_count = 0
    
    for user_data in demo_users:
        telegram_id = user_data['telegram_id']
        username = user_data['username']
        plan = user_data['plan']
        days_ago = user_data['days_ago']
        status = user_data.get('status')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = user_service.get_user(telegram_id)
        if existing_user:
            print(f"‚è≠Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            continue
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = user_service.create_user(telegram_id=telegram_id, username=username)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        user.set_subscription(plan)
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
        start_date = datetime.now() - timedelta(days=days_ago)
        user.created_at = start_date
        user.subscription_start = start_date
        
        # –î–ª—è –ø–ª–∞–Ω–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è
        if user.subscription_end:
            user.subscription_end = start_date + (user.subscription_end - datetime.now())
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if status:
            user.status = status
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        import random
        user.accounts_count = random.randint(1, 50)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_service.update_user(user)
        
        # –°—Ç–∞—Ç—É—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        status_emoji = "‚úÖ" if user.is_active else "‚ùå" if user.status == UserStatus.BLOCKED else "‚è∞"
        days_left = user.days_remaining if user.days_remaining >= 0 else "‚àû"
        
        print(f"‚úÖ {status_emoji} {username}")
        print(f"   ID: {telegram_id}")
        print(f"   –ü–ª–∞–Ω: {plan.value}")
        print(f"   –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å: {days_left}")
        print(f"   –ê–∫–∫–∞—É–Ω—Ç–æ–≤: {user.accounts_count}")
        print()
        
        created_count += 1
    
    print(f"üéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø:")
    print("=" * 40)
    
    stats = user_service.get_statistics()
    print(f"‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
    print(f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active_users']}")
    print(f"‚Ä¢ –ù–∞ —Ç—Ä–∏–∞–ª–µ: {stats['trial_users']}")
    print(f"‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {stats['blocked_users']}")
    print(f"‚Ä¢ –ò—Å—Ç–µ–∫—à–∏—Ö: {stats['expired_users']}")
    print(f"‚Ä¢ –û—Ü–µ–Ω–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥: ${stats['estimated_revenue']:.2f}")
    
    return created_count

def clear_demo_users():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ—Ö –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    user_service = UserService()
    
    demo_telegram_ids = [
        111111111, 222222222, 333333333, 444444444,
        555555555, 666666666, 777777777, 888888888
    ]
    
    print("üóëÔ∏è  –£–î–ê–õ–ï–ù–ò–ï –î–ï–ú–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 40)
    
    deleted_count = 0
    for telegram_id in demo_telegram_ids:
        if user_service.delete_user(telegram_id):
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id}")
            deleted_count += 1
        else:
            print(f"‚è≠Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüéâ –£–¥–∞–ª–µ–Ω–æ {deleted_count} –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")

if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∞–¥–º–∏–Ω –±–æ—Ç–∞")
    parser.add_argument("--create", action="store_true", help="–°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    parser.add_argument("--clear", action="store_true", help="–£–¥–∞–ª–∏—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    parser.add_argument("--recreate", action="store_true", help="–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    args = parser.parse_args()
    
    if args.recreate:
        clear_demo_users()
        print()
        create_demo_users()
    elif args.clear:
        clear_demo_users()
    elif args.create:
        create_demo_users()
    else:
        print("üé≠ –î–ï–ú–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ê–î–ú–ò–ù –ë–û–¢–ê")
        print("=" * 40)
        print()
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python admin_bot/demo_users.py --create     # –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  python admin_bot/demo_users.py --clear      # –£–¥–∞–ª–∏—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  python admin_bot/demo_users.py --recreate   # –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print()
        print("–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ:")
        print("‚Ä¢ –£–≤–∏–¥–µ—Ç—å –∏—Ö –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏")
        print("‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏")
        print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É")
        print("‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ–∫–∞—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–∫–∞—Ö") 
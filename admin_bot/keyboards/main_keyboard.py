"""
–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω –±–æ—Ç–∞
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List

from ..config.admin_list import has_permission, Permission

def get_main_keyboard(user_id: int):
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = []
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
    keyboard.append([
        InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
        InlineKeyboardButton("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="users_menu")
    ])
    
    # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã
    if has_permission(user_id, Permission.VIEW_ANALYTICS):
        keyboard.append([
            InlineKeyboardButton("üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="analytics"),
            InlineKeyboardButton("üí∞ –§–∏–Ω–∞–Ω—Å—ã", callback_data="financial")
        ])
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    if has_permission(user_id, Permission.MANAGE_SYSTEM):
        keyboard.append([
            InlineKeyboardButton("‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞", callback_data="system"),
            InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications")
        ])
    
    # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    if has_permission(user_id, Permission.EXPORT_DATA):
        keyboard.append([
            InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç", callback_data="export")
        ])
    
    # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    keyboard.append([
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="refresh_main"),
        InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    ])
    
    return InlineKeyboardMarkup(keyboard)

def get_back_to_main_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def get_confirmation_keyboard(action: str, item_id: str = "") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"confirm_{action}_{item_id}"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}")
        ],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def get_quick_actions_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
    buttons = []
    
    # –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if has_permission(user_id, Permission.VIEW_STATS):
        buttons.append([
            InlineKeyboardButton("üìà –°–µ–≥–æ–¥–Ω—è", callback_data="quick_stats_today"),
            InlineKeyboardButton("üìä –°–µ–π—á–∞—Å", callback_data="quick_stats_now")
        ])
    
    # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏  
    if has_permission(user_id, Permission.VIEW_USERS):
        buttons.append([
            InlineKeyboardButton("üë• –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="quick_users_active"),
            InlineKeyboardButton("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã", callback_data="quick_users_problems")
        ])
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    if has_permission(user_id, Permission.VIEW_SYSTEM):
        buttons.append([
            InlineKeyboardButton("üñ•Ô∏è –°–µ—Ä–≤–µ—Ä—ã", callback_data="quick_system_status"),
            InlineKeyboardButton("üîó –ü—Ä–æ–∫—Å–∏", callback_data="quick_proxy_status")
        ])
    
    # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    if has_permission(user_id, Permission.EXPORT_DATA):
        buttons.append([
            InlineKeyboardButton("üìÑ –≠–∫—Å–ø–æ—Ä—Ç", callback_data="quick_export")
        ])
    
    buttons.append([
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(buttons)

def get_navigation_keyboard(current_page: int, total_pages: int, 
                          callback_prefix: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º"""
    buttons = []
    
    navigation_row = []
    
    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if current_page > 1:
        navigation_row.append(
            InlineKeyboardButton(
                "‚óÄÔ∏è –ü—Ä–µ–¥", 
                callback_data=f"{callback_prefix}_page_{current_page - 1}"
            )
        )
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    navigation_row.append(
        InlineKeyboardButton(
            f"üìÑ {current_page}/{total_pages}",
            callback_data="page_info"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if current_page < total_pages:
        navigation_row.append(
            InlineKeyboardButton(
                "–°–ª–µ–¥ ‚ñ∂Ô∏è", 
                callback_data=f"{callback_prefix}_page_{current_page + 1}"
            )
        )
    
    if navigation_row:
        buttons.append(navigation_row)
    
    # –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ (–µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –º–Ω–æ–≥–æ)
    if total_pages > 5:
        quick_nav = []
        if current_page > 3:
            quick_nav.append(
                InlineKeyboardButton("1", callback_data=f"{callback_prefix}_page_1")
            )
        if current_page < total_pages - 2:
            quick_nav.append(
                InlineKeyboardButton(str(total_pages), callback_data=f"{callback_prefix}_page_{total_pages}")
            )
        if quick_nav:
            buttons.append(quick_nav)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    buttons.append([
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(buttons) 
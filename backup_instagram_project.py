#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ Instagram Bot –ø—Ä–æ–µ–∫—Ç–∞
–°–æ–∑–¥–∞–µ—Ç ZIP –∞—Ä—Ö–∏–≤ —Å–æ –≤—Å–µ–º–∏ –≤–∞–∂–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import zipfile
import shutil
from datetime import datetime
from pathlib import Path

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞
EXCLUDE_DIRS = {
    '__pycache__',
    '.git',
    'venv',
    'web_env',
    'web_env_new',
    '.pytest_cache',
    '.idea',
    '.vscode',
    'node_modules',
    'instagram-automation-dashboard/node_modules',
    'instagram-automation-dashboard/.next',
    'instagram-automation-dashboard/out',
    'email_logs',  # –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    'media',  # –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –º–æ–≥—É—Ç –±—ã—Ç—å –±–æ–ª—å—à–∏–º–∏
    'test_content',  # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
}

EXCLUDE_FILES = {
    '.DS_Store',
    'Thumbs.db',
    '*.pyc',
    '*.pyo',
    '*.log',
    'nul',
}

# –§–∞–π–ª—ã —Å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
SENSITIVE_FILES = {
    'config.py',
    'warmup_settings.json',
    'data/accounts/',
    'data/user_agents.json',
    'devices/',
    'working_accounts/',
}

def should_exclude(path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–∫–ª—é—á–∏—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"""
    path = Path(path)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    for part in path.parts:
        if part in EXCLUDE_DIRS:
            return True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    if path.is_file():
        if path.name in EXCLUDE_FILES:
            return True
        for pattern in EXCLUDE_FILES:
            if '*' in pattern and path.match(pattern):
                return True
    
    return False

def create_backup():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø—Ä–æ–µ–∫—Ç–∞"""
    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = Path.cwd()
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    backup_dir = project_dir.parent / 'instagram_bot_backups'
    backup_dir.mkdir(exist_ok=True)
    
    # –ò–º—è –∞—Ä—Ö–∏–≤–∞ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_name = f'instagram_bot_backup_{timestamp}'
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞
    main_archive = backup_dir / f'{backup_name}_main.zip'
    sensitive_archive = backup_dir / f'{backup_name}_sensitive.zip'
    
    print(f"üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ Instagram Bot –ø—Ä–æ–µ–∫—Ç–∞...")
    print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {project_dir}")
    print(f"üì¶ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤: {backup_dir}")
    
    # –°—á–µ—Ç—á–∏–∫–∏ —Ñ–∞–π–ª–æ–≤
    main_files = 0
    sensitive_files = 0
    excluded_items = 0
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Ä—Ö–∏–≤
    with zipfile.ZipFile(main_archive, 'w', zipfile.ZIP_DEFLATED) as main_zip:
        with zipfile.ZipFile(sensitive_archive, 'w', zipfile.ZIP_DEFLATED) as sensitive_zip:
            
            for root, dirs, files in os.walk(project_dir):
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                dirs[:] = [d for d in dirs if not should_exclude(os.path.join(root, d))]
                
                for file in files:
                    file_path = os.path.join(root, file)
                    
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                    if should_exclude(file_path):
                        excluded_items += 1
                        continue
                    
                    # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∞—Ä—Ö–∏–≤–∞
                    arcname = os.path.relpath(file_path, project_dir)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º
                    is_sensitive = False
                    for sensitive_pattern in SENSITIVE_FILES:
                        if sensitive_pattern in arcname or arcname.startswith(sensitive_pattern):
                            is_sensitive = True
                            break
                    
                    try:
                        if is_sensitive:
                            sensitive_zip.write(file_path, arcname)
                            sensitive_files += 1
                            print(f"  üîê {arcname}")
                        else:
                            main_zip.write(file_path, arcname)
                            main_files += 1
                            if main_files % 100 == 0:
                                print(f"  üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {main_files} —Ñ–∞–π–ª–æ–≤...")
                    except Exception as e:
                        print(f"  ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {arcname}: {e}")
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—ç–∫–∞–ø–µ
    info_file = backup_dir / f'{backup_name}_info.txt'
    with open(info_file, 'w', encoding='utf-8') as f:
        f.write(f"Instagram Bot Backup Information\n")
        f.write(f"{'='*50}\n")
        f.write(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        f.write(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {project_dir}\n")
        f.write(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n")
        f.write(f"- –û—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {main_files}\n")
        f.write(f"- –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {sensitive_files}\n")
        f.write(f"- –ò—Å–∫–ª—é—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {excluded_items}\n")
        f.write(f"\n–†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–æ–≤:\n")
        f.write(f"- –û—Å–Ω–æ–≤–Ω–æ–π: {main_archive.stat().st_size / 1024 / 1024:.2f} MB\n")
        f.write(f"- –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π: {sensitive_archive.stat().st_size / 1024 / 1024:.2f} MB\n")
        f.write(f"\n–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\n")
        for d in sorted(EXCLUDE_DIRS):
            f.write(f"  - {d}\n")
    
    # –°–æ–∑–¥–∞–µ–º README –¥–ª—è –±—ç–∫–∞–ø–∞
    readme_file = backup_dir / f'{backup_name}_README.md'
    with open(readme_file, 'w', encoding='utf-8') as f:
        f.write(f"# Instagram Bot Backup - {timestamp}\n\n")
        f.write(f"## üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–æ–≤\n\n")
        f.write(f"### –û—Å–Ω–æ–≤–Ω–æ–π –∞—Ä—Ö–∏–≤ (`{backup_name}_main.zip`)\n")
        f.write(f"–°–æ–¥–µ—Ä–∂–∏—Ç –≤–µ—Å—å –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞:\n")
        f.write(f"- Python –º–æ–¥—É–ª–∏\n")
        f.write(f"- Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã\n") 
        f.write(f"- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n")
        f.write(f"- –¢–µ—Å—Ç—ã\n\n")
        f.write(f"### –ê—Ä—Ö–∏–≤ —Å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (`{backup_name}_sensitive.zip`)\n")
        f.write(f"‚ö†Ô∏è **–í–ê–ñ–ù–û**: –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n")
        f.write(f"- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã\n")
        f.write(f"- –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n")
        f.write(f"- Device fingerprints\n")
        f.write(f"- –†–∞–±–æ—á–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n\n")
        f.write(f"## üîß –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞\n\n")
        f.write(f"1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞\n")
        f.write(f"2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∞—Ä—Ö–∏–≤\n")
        f.write(f"3. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤ —Å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)\n")
        f.write(f"4. –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:\n")
        f.write(f"   ```bash\n")
        f.write(f"   python -m venv venv\n")
        f.write(f"   source venv/bin/activate  # Linux/Mac\n")
        f.write(f"   # –∏–ª–∏\n")
        f.write(f"   venv\\Scripts\\activate  # Windows\n")
        f.write(f"   ```\n")
        f.write(f"5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:\n")
        f.write(f"   ```bash\n")
        f.write(f"   pip install -r requirements.txt\n")
        f.write(f"   ```\n\n")
        f.write(f"## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—ç–∫–∞–ø–∞\n\n")
        f.write(f"- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
        f.write(f"- **–û—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:** {main_files}\n")
        f.write(f"- **–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:** {sensitive_files}\n")
        f.write(f"- **–†–∞–∑–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞:** {main_archive.stat().st_size / 1024 / 1024:.2f} MB\n")
        f.write(f"- **–†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞ —Å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:** {sensitive_archive.stat().st_size / 1024 / 1024:.2f} MB\n")
    
    print(f"\n‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  - –û—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {main_files}")
    print(f"  - –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {sensitive_files}")
    print(f"  - –ò—Å–∫–ª—é—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {excluded_items}")
    print(f"\nüíæ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print(f"  - {main_archive}")
    print(f"  - {sensitive_archive}")
    print(f"  - {info_file}")
    print(f"  - {readme_file}")
    print(f"\nüîê –í–ê–ñ–ù–û: –ê—Ä—Ö–∏–≤ '{backup_name}_sensitive.zip' —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")
    print(f"           –•—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!")
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    create_encrypted = input("\nüîí –°–æ–∑–¥–∞—Ç—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö? (y/n): ")
    if create_encrypted.lower() == 'y':
        try:
            import pyzipper
            password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ")
            
            encrypted_archive = backup_dir / f'{backup_name}_sensitive_encrypted.zip'
            with pyzipper.AESZipFile(encrypted_archive, 'w', compression=pyzipper.ZIP_DEFLATED, encryption=pyzipper.WZ_AES) as zf:
                zf.setpassword(password.encode())
                zf.setencryption(pyzipper.WZ_AES, nbits=256)
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
                with zipfile.ZipFile(sensitive_archive, 'r') as source_zip:
                    for file_info in source_zip.filelist:
                        zf.writestr(file_info.filename, source_zip.read(file_info.filename))
            
            print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤: {encrypted_archive}")
            print(f"‚ö†Ô∏è  –ù–ï –ó–ê–ë–£–î–¨–¢–ï –ü–ê–†–û–õ–¨! –ë–µ–∑ –Ω–µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!")
            
            # –£–¥–∞–ª—è–µ–º –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤
            os.remove(sensitive_archive)
            print(f"üóëÔ∏è  –ù–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ —É–¥–∞–ª–µ–Ω")
            
        except ImportError:
            print("\n‚ö†Ô∏è  –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pyzipper:")
            print("    pip install pyzipper")

if __name__ == "__main__":
    try:
        create_backup()
    except KeyboardInterrupt:
        print("\n\n‚ùå –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
        import traceback
        traceback.print_exc() 
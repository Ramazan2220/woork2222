#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å–∏—Å—Ç–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
sys.path.insert(0, str(Path(__file__).parent))

from database.db_manager import get_instagram_accounts, init_db, update_instagram_account
from instagram.health_monitor import AdvancedHealthMonitor
from instagram.activity_limiter import ActivityLimiter
from instagram.lifecycle_manager import AccountLifecycleManager
from instagram.predictive_monitor import PredictiveMonitor
from instagram.advanced_verification import AdvancedVerificationSystem

def update_systems_with_real_data():
    """–û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò")
    print("=" * 50)
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    valid_accounts = [
        'dhtest888sysyaj2',
        'drmarkmoored94131', 
        'meanthony_21260',
        'TestNols28882',
        'WollyDolyy282',
        'willimentqabeci2pa'
    ]
    
    invalid_accounts = [
        'finleybarbara124252',
        'pagehank302073',
        'fischercarmen3096194',
        'donarcolatr594',
        '0238_helenojm535',
        'megeorge.s730o',
        'cmb.mary.lip70g',
        'john_wilsonsh05926',
        'NSKskksy8osks'
    ]
    
    try:
        init_db()
        accounts = get_instagram_accounts()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –ë–î
        print("üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for account in accounts:
            if account.username in valid_accounts:
                update_instagram_account(account.id, is_active=True)
                print(f"  ‚úÖ {account.username} - –∞–∫—Ç–∏–≤–µ–Ω")
            elif account.username in invalid_accounts:
                update_instagram_account(account.id, is_active=False)
                print(f"  ‚ùå {account.username} - –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω")
        
        print("\nüß† HEALTH MONITOR - –†–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        health_monitor = AdvancedHealthMonitor()
        for account in accounts:
            score = health_monitor.calculate_comprehensive_health_score(account.id)
            status = "üü¢" if score >= 70 else "üü°" if score >= 50 else "üî¥"
            print(f"  {status} {account.username}: {score}/100")
        
        print("\nüö¶ ACTIVITY LIMITER - –†–µ–∞–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:")
        activity_limiter = ActivityLimiter()
        for account in accounts[:5]:  # –ü–µ—Ä–≤—ã–µ 5
            restrictions = activity_limiter.check_current_restrictions(account.id)
            status = "üî¥" if restrictions else "üü¢"
            print(f"  {status} {account.username}: {'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è' if restrictions else '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}")
        
        print("\nüîÑ LIFECYCLE MANAGER - –†–µ–∞–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã:")
        lifecycle_manager = AccountLifecycleManager()
        stages_distribution = lifecycle_manager.get_all_accounts_stages()
        for stage, accounts_list in stages_distribution.items():
            if accounts_list:
                print(f"  üìä {stage}: {len(accounts_list)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        
        print("\nüîÆ PREDICTIVE MONITOR - –†–µ–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏:")
        predictive_monitor = PredictiveMonitor()
        risk_summary = predictive_monitor.get_all_accounts_risk_summary()
        if risk_summary:
            avg_risk = risk_summary.get('average_risk', 0)
            high_risk = risk_summary.get('high_risk_count', 0)
            print(f"  üìà –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: {avg_risk}/100")
            print(f"  üö® –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: {high_risk} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        
        print("\nüîê ADVANCED VERIFICATION - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        verification_system = AdvancedVerificationSystem()
        stats = verification_system.get_verification_statistics()
        if stats:
            success_rate = stats.get('success_rate', 0)
            total_verifications = stats.get('total_verifications', 0)
            print(f"  üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {success_rate}%")
            print(f"  üî¢ –í—Å–µ–≥–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π: {total_verifications}")
        
        print("\n‚úÖ –í–°–ï –°–ò–°–¢–ï–ú–´ –û–ë–ù–û–í–õ–ï–ù–´ –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò!")
        print("\nüéØ –ö–†–ê–¢–ö–ò–ô –ò–¢–û–ì:")
        print(f"  ‚Ä¢ –í–∞–ª–∏–¥–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(valid_accounts)}/15 (40%)")
        print(f"  ‚Ä¢ –°–∏—Å—Ç–µ–º—ã —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")
        print(f"  ‚Ä¢ Health Monitor —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å")
        print(f"  ‚Ä¢ Activity Limiter —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏")
        print(f"  ‚Ä¢ –í—Å–µ –º–æ–¥—É–ª–∏ –≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å–∏—Å—Ç–µ–º")
    print("‚è∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print()
    
    success = update_systems_with_real_data()
    
    if success:
        print(f"\nüéâ –ì–û–¢–û–í–û! –¢–µ–ø–µ—Ä—å –≤—Å–µ 6 –º–æ–¥—É–ª–µ–π —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        print("üî• –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print("   python run_all_tests.py")
    else:
        print(f"\nüí• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!") 
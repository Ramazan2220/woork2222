#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import get_instagram_accounts, update_instagram_account
from utils.encryption import encryption
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def fix_password_encryption():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–æ–ª–µ–π"""
    
    accounts = get_instagram_accounts()
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
    
    encrypted_count = 0
    already_encrypted = 0
    errors = 0
    
    for account in accounts:
        if not account.password:
            logger.warning(f"‚ö†Ô∏è –ê–∫–∫–∞—É–Ω—Ç {account.username} –±–µ–∑ –ø–∞—Ä–æ–ª—è")
            continue
            
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
            if account.password.startswith('gAAAAA'):
                already_encrypted += 1
                logger.debug(f"‚úÖ {account.username} —É–∂–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω")
                continue
            
            # –®–∏—Ñ—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
            encrypted = encryption.encrypt_password(account.password)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            decrypted_test = encryption.decrypt_password(encrypted)
            if decrypted_test != account.password:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {account.username}")
                errors += 1
                continue
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
            update_instagram_account(account.id, password=encrypted)
            encrypted_count += 1
            logger.info(f"üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è {account.username}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {account.username}: {e}")
            errors += 1
    
    logger.info(f"""
üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –®–ò–§–†–û–í–ê–ù–ò–Ø:
‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {encrypted_count}
üîê –£–∂–µ –±—ã–ª–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {already_encrypted}  
‚ùå –û—à–∏–±–∫–∏: {errors}
üì± –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}
""")

if __name__ == "__main__":
    fix_password_encryption() 
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_manager import get_instagram_accounts, update_instagram_account
from utils.encryption import encryption
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def fix_password_encryption():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–æ–ª–µ–π"""
    
    accounts = get_instagram_accounts()
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}")
    
    encrypted_count = 0
    already_encrypted = 0
    errors = 0
    
    for account in accounts:
        if not account.password:
            logger.warning(f"‚ö†Ô∏è –ê–∫–∫–∞—É–Ω—Ç {account.username} –±–µ–∑ –ø–∞—Ä–æ–ª—è")
            continue
            
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
            if account.password.startswith('gAAAAA'):
                already_encrypted += 1
                logger.debug(f"‚úÖ {account.username} —É–∂–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω")
                continue
            
            # –®–∏—Ñ—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
            encrypted = encryption.encrypt_password(account.password)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            decrypted_test = encryption.decrypt_password(encrypted)
            if decrypted_test != account.password:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {account.username}")
                errors += 1
                continue
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
            update_instagram_account(account.id, password=encrypted)
            encrypted_count += 1
            logger.info(f"üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è {account.username}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {account.username}: {e}")
            errors += 1
    
    logger.info(f"""
üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –®–ò–§–†–û–í–ê–ù–ò–Ø:
‚úÖ –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {encrypted_count}
üîê –£–∂–µ –±—ã–ª–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ: {already_encrypted}  
‚ùå –û—à–∏–±–∫–∏: {errors}
üì± –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(accounts)}
""")

if __name__ == "__main__":
    fix_password_encryption() 
 
 
 